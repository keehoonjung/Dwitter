[{"/Users/keehoonjung/projects/react/template/src/index.js":"1","/Users/keehoonjung/projects/react/template/src/app.jsx":"2","/Users/keehoonjung/projects/react/dwitter/client/src/index.tsx":"3","/Users/keehoonjung/projects/react/dwitter/client/src/app.tsx":"4","/Users/keehoonjung/projects/react/dwitter/client/src/components/login/login.tsx":"5","/Users/keehoonjung/projects/react/dwitter/client/src/components/main/main.tsx":"6","/Users/keehoonjung/projects/react/dwitter/client/src/components/header/header.tsx":"7","/Users/keehoonjung/projects/react/dwitter/client/src/components/post_tweet/post_tweet.tsx":"8","/Users/keehoonjung/projects/react/dwitter/client/src/components/tweets/tweets.tsx":"9","/Users/keehoonjung/projects/react/dwitter/client/src/components/tweet/tweet.tsx":"10","/Users/keehoonjung/projects/react/dwitter/client/src/service/store.tsx":"11","/Users/keehoonjung/projects/react/dwitter/client/src/components/update_tweet/update_tweet.tsx":"12"},{"size":219,"mtime":1630304852651,"results":"13","hashOfConfig":"14"},{"size":89,"mtime":1630304790824,"results":"15","hashOfConfig":"14"},{"size":401,"mtime":1633360264187,"results":"16","hashOfConfig":"17"},{"size":873,"mtime":1633341286488,"results":"18","hashOfConfig":"17"},{"size":1490,"mtime":1633360264185,"results":"19","hashOfConfig":"17"},{"size":281,"mtime":1633360264185,"results":"20","hashOfConfig":"17"},{"size":320,"mtime":1633252852756,"results":"21","hashOfConfig":"17"},{"size":1229,"mtime":1633422950321,"results":"22","hashOfConfig":"17"},{"size":613,"mtime":1633413818647,"results":"23","hashOfConfig":"17"},{"size":2757,"mtime":1633431522279,"results":"24","hashOfConfig":"17"},{"size":2156,"mtime":1633431079146,"results":"25","hashOfConfig":"17"},{"size":900,"mtime":1633431524581,"results":"26","hashOfConfig":"17"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vjms9g",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1t5yxqx",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/keehoonjung/projects/react/template/src/index.js",[],"/Users/keehoonjung/projects/react/template/src/app.jsx",[],"/Users/keehoonjung/projects/react/dwitter/client/src/index.tsx",[],["54","55"],"/Users/keehoonjung/projects/react/dwitter/client/src/app.tsx",[],"/Users/keehoonjung/projects/react/dwitter/client/src/components/login/login.tsx",[],"/Users/keehoonjung/projects/react/dwitter/client/src/components/main/main.tsx",["56"],"import React from \"react\";\nimport PostTweet from \"../post_tweet/post_tweet\";\nimport Tweets from \"../tweets/tweets\";\nimport styles from \"./main.module.css\";\n\nconst Main = (props: any) => {\n  return (\n    <>\n      <PostTweet />\n      <Tweets />\n    </>\n  );\n};\n\nexport default Main;\n","/Users/keehoonjung/projects/react/dwitter/client/src/components/header/header.tsx",[],"/Users/keehoonjung/projects/react/dwitter/client/src/components/post_tweet/post_tweet.tsx",[],"/Users/keehoonjung/projects/react/dwitter/client/src/components/tweets/tweets.tsx",[],"/Users/keehoonjung/projects/react/dwitter/client/src/components/tweet/tweet.tsx",["57"],"import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport {\n  deleteTweet,\n  getTweets,\n  TweetType,\n  updateTweets,\n} from \"../../service/store\";\nimport UpdateTweet from \"../update_tweet/update_tweet\";\nimport styles from \"./tweet.module.css\";\n\ntype TweetPros = {\n  item: TweetType;\n  index: number;\n  dispatch: Dispatch;\n};\n\nconst Tweet = ({ item, index, dispatch }: TweetPros) => {\n  const [updatePannel, setUpdatePannel] = useState(false);\n  const onClick = () => {\n    dispatch(deleteTweet(index));\n  };\n\n  const onLink = () => {\n    dispatch(getTweets(item.useranme));\n  };\n\n  const onUpdate = (text: string) => {\n    dispatch(updateTweets({ index, text }));\n  };\n\n  const onUpdatePannel = () => {\n    setUpdatePannel(true);\n  };\n\n  const offUpdatePannel = () => {\n    setUpdatePannel(false);\n  };\n\n  return (\n    <li\n      className={`${styles.container} ${onUpdatePannelSetting(updatePannel)}`}\n    >\n      <img className={styles.thumbnail} src={item.url} alt=\"thumbnail\" />\n      <div className={styles.description}>\n        <div className={styles.user}>\n          <h3 className={styles.user_name}>{item.name}</h3>\n          <a className={styles.user_id} href=\"#\" onClick={onLink}>\n            {item.useranme}\n          </a>\n          <p className={styles.user_createdAt}>\n            {calculateDate(item.createdAt!)}\n          </p>\n        </div>\n        <p className={styles.text}>{item.text}</p>\n        {updatePannel && (\n          <UpdateTweet onUpdate={onUpdate} offUpdatePannel={offUpdatePannel} />\n        )}\n      </div>\n      <div className={styles.button_container}>\n        <button className={styles.deleteBtn} onClick={onClick}>\n          <i className=\"fas fa-times\"></i>\n        </button>\n        <button className={styles.updateBtn} onClick={onUpdatePannel}>\n          <i className=\"fas fa-pencil-alt\"></i>\n        </button>\n      </div>\n    </li>\n  );\n};\n\nfunction onUpdatePannelSetting(onUpdate: boolean) {\n  if (onUpdate) {\n    return styles.onUpdate;\n  }\n}\n\nfunction calculateDate(date: number) {\n  const newDate = new Date(date);\n  const diffDate = Date.now() - date;\n  const second = Math.floor(diffDate / 1000);\n  const minute = Math.floor(second / 60);\n  const hour = Math.floor(minute / 60);\n  const day = Math.floor(hour / 24);\n  if (day >= 30) {\n    return `· on ${newDate.getMonth()}월 ${newDate.getDate()} `;\n  }\n  if (day >= 1) {\n    return `· ${day} days ago`;\n  }\n  if (hour >= 1) {\n    return `· ${hour} hours ago`;\n  }\n  if (minute >= 1) {\n    return `· ${minute} minute ago`;\n  }\n  return `· just now`;\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    dispatch,\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(Tweet);\n","/Users/keehoonjung/projects/react/dwitter/client/src/service/store.tsx",[],"/Users/keehoonjung/projects/react/dwitter/client/src/components/update_tweet/update_tweet.tsx",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":4,"column":8,"nodeType":"64","messageId":"65","endLine":4,"endColumn":14},{"ruleId":"66","severity":1,"message":"67","line":49,"column":11,"nodeType":"68","endLine":49,"endColumn":67},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"@typescript-eslint/no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]