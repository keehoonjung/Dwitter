{"ast":null,"code":"var _jsxFileName = \"/Users/keehoonjung/projects/react/dwitter/client/src/container/login_container.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport Login from \"../components/login/login\";\nimport { createId, loginId } from \"../module/users\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LoginContainer = props => {\n  _s();\n\n  const {\n    loading,\n    error,\n    login\n  } = useSelector(state => state.user.user);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const onLoginId = (id, password) => {\n    dispatch(loginId(id, password));\n  };\n\n  const onCreateId = (id, password, name, email, url) => {\n    dispatch(createId(id, password, name, email, url));\n  };\n\n  useEffect(() => {\n    if (login) {\n      history.push({\n        pathname: \"/main\"\n      });\n    }\n  }, [login, history]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uB85C\\uB529\\uC911\\uC785\\uB2C8\\uB2E4\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Login, {\n      onLoginId: onLoginId,\n      onCreateId: onCreateId,\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(LoginContainer, \"7efJlrVCk324iQAn36QTReEkJzU=\", false, function () {\n  return [useSelector, useDispatch, useHistory];\n});\n\n_c = LoginContainer;\nexport default LoginContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginContainer\");","map":{"version":3,"sources":["/Users/keehoonjung/projects/react/dwitter/client/src/container/login_container.jsx"],"names":["React","useEffect","useDispatch","useSelector","useHistory","Login","createId","loginId","LoginContainer","props","loading","error","login","state","user","dispatch","history","onLoginId","id","password","onCreateId","name","email","url","push","pathname"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,iBAAlC;;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA4BT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWA,IAAvB,CAA7C;AACA,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAMc,OAAO,GAAGZ,UAAU,EAA1B;;AACA,QAAMa,SAAS,GAAG,CAACC,EAAD,EAAKC,QAAL,KAAkB;AAClCJ,IAAAA,QAAQ,CAACR,OAAO,CAACW,EAAD,EAAKC,QAAL,CAAR,CAAR;AACD,GAFD;;AAGA,QAAMC,UAAU,GAAG,CAACF,EAAD,EAAKC,QAAL,EAAeE,IAAf,EAAqBC,KAArB,EAA4BC,GAA5B,KAAoC;AACrDR,IAAAA,QAAQ,CAACT,QAAQ,CAACY,EAAD,EAAKC,QAAL,EAAeE,IAAf,EAAqBC,KAArB,EAA4BC,GAA5B,CAAT,CAAR;AACD,GAFD;;AAGAtB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,KAAJ,EAAW;AACTI,MAAAA,OAAO,CAACQ,IAAR,CAAa;AACXC,QAAAA,QAAQ,EAAE;AADC,OAAb;AAGD;AACF,GANQ,EAMN,CAACb,KAAD,EAAQI,OAAR,CANM,CAAT;AAQA,MAAIN,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,sBACE;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAEO,SAAlB;AAA6B,MAAA,UAAU,EAAEG,UAAzC;AAAqD,MAAA,KAAK,EAAET;AAA5D;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,CAxBD;;GAAMH,c;UAC8BL,W,EACjBD,W,EACDE,U;;;KAHZI,c;AA0BN,eAAeA,cAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport Login from \"../components/login/login\";\nimport { createId, loginId } from \"../module/users\";\n\nconst LoginContainer = (props) => {\n  const { loading, error, login } = useSelector((state) => state.user.user);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const onLoginId = (id, password) => {\n    dispatch(loginId(id, password));\n  };\n  const onCreateId = (id, password, name, email, url) => {\n    dispatch(createId(id, password, name, email, url));\n  };\n  useEffect(() => {\n    if (login) {\n      history.push({\n        pathname: \"/main\",\n      });\n    }\n  }, [login, history]);\n\n  if (loading) return <div>로딩중입니다</div>;\n  return (\n    <>\n      <Login onLoginId={onLoginId} onCreateId={onCreateId} error={error} />\n    </>\n  );\n};\n\nexport default LoginContainer;\n"]},"metadata":{},"sourceType":"module"}