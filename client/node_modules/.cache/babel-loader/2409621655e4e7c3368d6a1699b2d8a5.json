{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst user = {\n  JK: {\n    name: \"JK\",\n    useranme: \"JK\",\n    url: \"https://res.cloudinary.com/dpvhkp8oq/image/upload/v1632646994/Motion/moxvxyhmceuumjye3lth.jpg\"\n  },\n  song: {\n    name: \"songsong\",\n    useranme: \"song\",\n    url: \"https://res.cloudinary.com/dpvhkp8oq/image/upload/v1632646994/Motion/moxvxyhmceuumjye3lth.jpg\"\n  }\n};\nconst data = {\n  \"1\": {\n    id: \"1\",\n    text: \"Hello\",\n    createdAt: Date.now(),\n    name: \"JK\",\n    useranme: \"JK\",\n    url: \"https://res.cloudinary.com/dpvhkp8oq/image/upload/v1632646994/Motion/moxvxyhmceuumjye3lth.jpg\"\n  },\n  \"2\": {\n    id: \"2\",\n    text: \"Hello2\",\n    createdAt: Date.now(),\n    name: \"song\",\n    useranme: \"song\",\n    url: \"https://res.cloudinary.com/dpvhkp8oq/image/upload/v1632646994/Motion/moxvxyhmceuumjye3lth.jpg\"\n  }\n};\nconst tweetsSlice = createSlice({\n  name: \"Tweets\",\n  initialState: {\n    user,\n    data\n  },\n  reducers: {\n    postTweet: (state, action) => {\n      const tweet = action.payload;\n      state.data[tweet.id] = tweet;\n    }\n  }\n});\nconst dataStore = configureStore({\n  reducer: tweetsSlice.reducer\n});\nexport default dataStore;","map":{"version":3,"sources":["/Users/keehoonjung/projects/react/dwitter/client/src/service/store.tsx"],"names":["configureStore","createSlice","user","JK","name","useranme","url","song","data","id","text","createdAt","Date","now","tweetsSlice","initialState","reducers","postTweet","state","action","tweet","payload","dataStore","reducer"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,kBAA5C;AA2BA,MAAMC,IAAI,GAAG;AACXC,EAAAA,EAAE,EAAE;AACFC,IAAAA,IAAI,EAAE,IADJ;AAEFC,IAAAA,QAAQ,EAAE,IAFR;AAGFC,IAAAA,GAAG,EAAE;AAHH,GADO;AAMXC,EAAAA,IAAI,EAAE;AACJH,IAAAA,IAAI,EAAE,UADF;AAEJC,IAAAA,QAAQ,EAAE,MAFN;AAGJC,IAAAA,GAAG,EAAE;AAHD;AANK,CAAb;AAaA,MAAME,IAAI,GAAG;AACX,OAAK;AACHC,IAAAA,EAAE,EAAE,GADD;AAEHC,IAAAA,IAAI,EAAE,OAFH;AAGHC,IAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EAHR;AAIHT,IAAAA,IAAI,EAAE,IAJH;AAKHC,IAAAA,QAAQ,EAAE,IALP;AAMHC,IAAAA,GAAG,EAAE;AANF,GADM;AASX,OAAK;AACHG,IAAAA,EAAE,EAAE,GADD;AAEHC,IAAAA,IAAI,EAAE,QAFH;AAGHC,IAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EAHR;AAIHT,IAAAA,IAAI,EAAE,MAJH;AAKHC,IAAAA,QAAQ,EAAE,MALP;AAMHC,IAAAA,GAAG,EAAE;AANF;AATM,CAAb;AAmBA,MAAMQ,WAAW,GAAGb,WAAW,CAAC;AAC9BG,EAAAA,IAAI,EAAE,QADwB;AAE9BW,EAAAA,YAAY,EAAE;AACZb,IAAAA,IADY;AAEZM,IAAAA;AAFY,GAFgB;AAM9BQ,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAqBC,MAArB,KAAiD;AAC1D,YAAMC,KAAK,GAAGD,MAAM,CAACE,OAArB;AACAH,MAAAA,KAAK,CAACV,IAAN,CAAWY,KAAK,CAACX,EAAjB,IAAuBW,KAAvB;AACD;AAJO;AANoB,CAAD,CAA/B;AAcA,MAAME,SAAS,GAAGtB,cAAc,CAAC;AAAEuB,EAAAA,OAAO,EAAET,WAAW,CAACS;AAAvB,CAAD,CAAhC;AAEA,eAAeD,SAAf","sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\n\nexport type TweetType = {\n  id: number;\n  text: string;\n  createdAt: number;\n  name: string;\n  useranme: string;\n  url: string;\n};\n\nexport type UserType = {\n  name: string;\n  useranme: string;\n  url: string;\n};\n\nexport type TweetsState = {\n  user: { [username: string]: UserType };\n  data: { [id: string]: TweetType };\n};\n\ntype postTweetAction = {\n  type: string;\n  payload: TweetType;\n};\n\nconst user = {\n  JK: {\n    name: \"JK\",\n    useranme: \"JK\",\n    url: \"https://res.cloudinary.com/dpvhkp8oq/image/upload/v1632646994/Motion/moxvxyhmceuumjye3lth.jpg\",\n  },\n  song: {\n    name: \"songsong\",\n    useranme: \"song\",\n    url: \"https://res.cloudinary.com/dpvhkp8oq/image/upload/v1632646994/Motion/moxvxyhmceuumjye3lth.jpg\",\n  },\n};\n\nconst data = {\n  \"1\": {\n    id: \"1\",\n    text: \"Hello\",\n    createdAt: Date.now(),\n    name: \"JK\",\n    useranme: \"JK\",\n    url: \"https://res.cloudinary.com/dpvhkp8oq/image/upload/v1632646994/Motion/moxvxyhmceuumjye3lth.jpg\",\n  },\n  \"2\": {\n    id: \"2\",\n    text: \"Hello2\",\n    createdAt: Date.now(),\n    name: \"song\",\n    useranme: \"song\",\n    url: \"https://res.cloudinary.com/dpvhkp8oq/image/upload/v1632646994/Motion/moxvxyhmceuumjye3lth.jpg\",\n  },\n};\n\nconst tweetsSlice = createSlice({\n  name: \"Tweets\",\n  initialState: {\n    user,\n    data,\n  },\n  reducers: {\n    postTweet: (state: TweetsState, action: postTweetAction) => {\n      const tweet = action.payload;\n      state.data[tweet.id] = tweet;\n    },\n  },\n});\n\nconst dataStore = configureStore({ reducer: tweetsSlice.reducer });\n\nexport default dataStore;\n"]},"metadata":{},"sourceType":"module"}