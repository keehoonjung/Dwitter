{"ast":null,"code":"export const tweetsPromiseThunk = (type, promiseCreator) => {\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n  return param => async dispatch => {\n    dispatch({\n      type\n    });\n\n    try {\n      const payload = await promiseCreator(param);\n      dispatch({\n        type: SUCCESS,\n        payload\n      });\n    } catch (e) {\n      dispatch({\n        type: ERROR,\n        payload: e,\n        error: true\n      });\n    }\n  };\n};\n\nconst defaultIdSelector = param => param;\n\nexport const tweetPromiseThunkById = (type, promiseCreator, idSelector = defaultIdSelector) => {\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n  return param => async dispatch => {\n    const id = idSelector(param);\n    dispatch({\n      type,\n      meta: id\n    });\n\n    try {\n      const payload = await promiseCreator(param);\n      dispatch({\n        type: SUCCESS,\n        payload,\n        meta: id\n      });\n    } catch (e) {\n      dispatch({\n        type: ERROR,\n        error: true,\n        payload: e,\n        meta: id\n      });\n    }\n  };\n};\nexport const tweetsReducerUtils = {\n  initial: (initialData = null) => ({\n    loading: false,\n    data: null,\n    error: null\n  }),\n  loading: (prevState = null) => ({\n    loading: true,\n    data: prevState,\n    error: null\n  }),\n  success: payload => ({\n    loading: false,\n    data: payload,\n    error: null\n  }),\n  error: error => ({\n    loading: false,\n    data: null,\n    error: error\n  })\n};\n\nconst handleAsyncActions = callback => {\n  console.log(\"helo\");\n  return (type, key) => {\n    const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n    return (state, action) => {\n      switch (action.type) {\n        case type:\n          const prevState = state[key] && state[key].data;\n          return { ...state,\n            [key]: prevState ? tweetsReducerUtils.loading(prevState) : tweetsReducerUtils.loading()\n          };\n\n        case SUCCESS:\n          return callback(key, state, action);\n\n        case ERROR:\n          return { ...state,\n            [key]: tweetsReducerUtils.error(action.payload)\n          };\n\n        default:\n          return state;\n      }\n    };\n  };\n};\n\nconst getAsyncActionCallback = (key, state, action) => ({ ...state,\n  [key]: tweetsReducerUtils.success(action.payload)\n});\n\nconst postAsyncActionCallback = (key, state, action) => {\n  const result = action.payload;\n  return { ...state,\n    [key]: {\n      loading: false,\n      data: result ? [result, ...state[key].data] : state.posts.data,\n      error: null\n    }\n  };\n};\n\nconst deleteAsyncActionCallback = (key, state, action) => ({ ...state,\n  posts: { ...state.posts,\n    data: state.posts.data ? state.posts.data.filter(tweet => tweet.id !== action.meta) : null\n  }\n});\n\nconst updateAsyncActionCallback = (key, state, action) => ({ ...state,\n  posts: { ...state.posts,\n    data: state.posts.data ? state.posts.data.map(tweet => {\n      if (tweet.id !== action.meta) {\n        return tweet;\n      }\n\n      return action.payload;\n    }) : null\n  }\n});\n\nexport const handleAsyncGetTweetsActions = handleAsyncActions(getAsyncActionCallback);\nexport const handleAsyncPostTweetActions = handleAsyncActions(postAsyncActionCallback);\nexport const handleAsyncDeleteTweetActions = handleAsyncActions(deleteAsyncActionCallback);\nexport const handleAsyncUpdateTweetActions = handleAsyncActions(updateAsyncActionCallback);","map":{"version":3,"sources":["/Users/keehoonjung/projects/react/dwitter/client/src/util/tweets_async_utils.js"],"names":["tweetsPromiseThunk","type","promiseCreator","SUCCESS","ERROR","param","dispatch","payload","e","error","defaultIdSelector","tweetPromiseThunkById","idSelector","id","meta","tweetsReducerUtils","initial","initialData","loading","data","prevState","success","handleAsyncActions","callback","console","log","key","state","action","getAsyncActionCallback","postAsyncActionCallback","result","posts","deleteAsyncActionCallback","filter","tweet","updateAsyncActionCallback","map","handleAsyncGetTweetsActions","handleAsyncPostTweetActions","handleAsyncDeleteTweetActions","handleAsyncUpdateTweetActions"],"mappings":"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","sourcesContent":["export const tweetsPromiseThunk = (type, promiseCreator) => {\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n\n  return (param) => async (dispatch) => {\n    dispatch({ type });\n    try {\n      const payload = await promiseCreator(param);\n      dispatch({ type: SUCCESS, payload });\n    } catch (e) {\n      dispatch({ type: ERROR, payload: e, error: true });\n    }\n  };\n};\n\nconst defaultIdSelector = (param) => param;\nexport const tweetPromiseThunkById = (\n  type,\n  promiseCreator,\n  idSelector = defaultIdSelector\n) => {\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n\n  return (param) => async (dispatch) => {\n    const id = idSelector(param);\n    dispatch({ type, meta: id });\n    try {\n      const payload = await promiseCreator(param);\n      dispatch({ type: SUCCESS, payload, meta: id });\n    } catch (e) {\n      dispatch({ type: ERROR, error: true, payload: e, meta: id });\n    }\n  };\n};\n\nexport const tweetsReducerUtils = {\n  initial: (initialData = null) => ({\n    loading: false,\n    data: null,\n    error: null,\n  }),\n  loading: (prevState = null) => ({\n    loading: true,\n    data: prevState,\n    error: null,\n  }),\n  success: (payload) => ({\n    loading: false,\n    data: payload,\n    error: null,\n  }),\n  error: (error) => ({\n    loading: false,\n    data: null,\n    error: error,\n  }),\n};\n\nconst handleAsyncActions = (callback) => {\n  console.log(\"helo\");\n  return (type, key) => {\n    const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n    return (state, action) => {\n      switch (action.type) {\n        case type:\n          const prevState = state[key] && state[key].data;\n          return {\n            ...state,\n            [key]: prevState\n              ? tweetsReducerUtils.loading(prevState)\n              : tweetsReducerUtils.loading(),\n          };\n        case SUCCESS:\n          return callback(key, state, action);\n        case ERROR:\n          return {\n            ...state,\n            [key]: tweetsReducerUtils.error(action.payload),\n          };\n        default:\n          return state;\n      }\n    };\n  };\n};\n\nconst getAsyncActionCallback = (key, state, action) => ({\n  ...state,\n  [key]: tweetsReducerUtils.success(action.payload),\n});\n\nconst postAsyncActionCallback = (key, state, action) => {\n  const result = action.payload;\n  return {\n    ...state,\n    [key]: {\n      loading: false,\n      data: result ? [result, ...state[key].data] : state.posts.data,\n      error: null,\n    },\n  };\n};\n\nconst deleteAsyncActionCallback = (key, state, action) => ({\n  ...state,\n  posts: {\n    ...state.posts,\n    data: state.posts.data\n      ? state.posts.data.filter((tweet) => tweet.id !== action.meta)\n      : null,\n  },\n});\n\nconst updateAsyncActionCallback = (key, state, action) => ({\n  ...state,\n  posts: {\n    ...state.posts,\n    data: state.posts.data\n      ? state.posts.data.map((tweet) => {\n          if (tweet.id !== action.meta) {\n            return tweet;\n          }\n          return action.payload;\n        })\n      : null,\n  },\n});\n\nexport const handleAsyncGetTweetsActions = handleAsyncActions(\n  getAsyncActionCallback\n);\nexport const handleAsyncPostTweetActions = handleAsyncActions(\n  postAsyncActionCallback\n);\nexport const handleAsyncDeleteTweetActions = handleAsyncActions(\n  deleteAsyncActionCallback\n);\nexport const handleAsyncUpdateTweetActions = handleAsyncActions(\n  updateAsyncActionCallback\n);\n"]},"metadata":{},"sourceType":"module"}