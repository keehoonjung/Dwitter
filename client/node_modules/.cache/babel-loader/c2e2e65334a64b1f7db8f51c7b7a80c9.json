{"ast":null,"code":"import { createUser, getUser } from \"../api/users\";\nimport { createLoginPromiseThunk } from \"../util/user_async_utils\";\nconst LOGIN_ID = \"LOGIN_ID\";\nconst LOGIN_ID_SUCCESS = \"LOGIN_ID_SUCCESS\";\nconst LOGIN_ID_ERROR = \"LOGIN_ID_ERROR\";\nconst LOGOUT_ID = \"LOGOUT_ID\";\nconst LOGOUT_ID_SUCCESS = \"LOGOUT_ID_SUCCESS\";\nconst LOGOUT_ID_ERROR = \"LOGOUT_ID_ERROR\";\nconst CREATE_ID = \"CREATE_ID\";\nconst CREATE_ID_SUCCESS = \"CREATE_ID_SUCCESS\";\nconst CREATE_ID_ERROR = \"CREATE_ID_ERROR\";\nexport const loginId = createLoginPromiseThunk(LOGIN_ID, getUser);\nexport const logoutId = () => dipatch => {\n  dipatch({\n    type: LOGOUT_ID\n  });\n\n  try {\n    dipatch({\n      type: LOGOUT_ID_SUCCESS\n    });\n  } catch (e) {\n    dipatch({\n      type: LOGOUT_ID_ERROR,\n      payload: e\n    });\n  }\n};\nexport const createId = (username, password, name, email, url) => async dipatch => {\n  dipatch({\n    type: CREATE_ID\n  });\n\n  if (password.length < 5) {\n    return dipatch({\n      type: CREATE_ID_ERROR,\n      payload: \"Error: password should be at least 5 characters\"\n    });\n  }\n\n  try {\n    const user = await getUser(username);\n    return dipatch({\n      type: CREATE_ID_ERROR,\n      payload: `Error: ${user.username} already exists`\n    });\n  } catch (e) {}\n\n  try {\n    const payload = await createUser({\n      username,\n      password,\n      name,\n      email,\n      url\n    });\n    dipatch({\n      type: CREATE_ID_SUCCESS,\n      payload\n    });\n  } catch (e) {\n    dipatch({\n      type: CREATE_ID_ERROR,\n      payload: e\n    });\n  }\n};\nconst initialState = {\n  user: {\n    loading: false,\n    login: false,\n    data: null,\n    error: null\n  }\n};\nexport default function users(state = initialState, action) {\n  switch (action.type) {\n    case LOGIN_ID:\n      return {\n        user: { ...state.user,\n          loading: true\n        }\n      };\n\n    case LOGIN_ID_SUCCESS:\n      return {\n        user: {\n          loading: false,\n          login: true,\n          data: action.payload,\n          error: null\n        }\n      };\n\n    case LOGIN_ID_ERROR:\n      return {\n        user: { ...state.user,\n          loading: false,\n          error: action.payload\n        }\n      };\n\n    case LOGOUT_ID:\n      return {\n        user: { ...state.user,\n          loading: true\n        }\n      };\n\n    case LOGOUT_ID_SUCCESS:\n      return {\n        user: { ...state.user,\n          loading: false,\n          login: false,\n          data: null\n        }\n      };\n\n    case LOGOUT_ID_ERROR:\n      return {\n        user: { ...state.user,\n          loading: false,\n          error: action.payload\n        }\n      };\n\n    case CREATE_ID:\n      return {\n        user: { ...state.user,\n          loading: true\n        }\n      };\n\n    case CREATE_ID_SUCCESS:\n      return {\n        user: {\n          loading: false,\n          login: true,\n          data: action.payload,\n          error: null\n        }\n      };\n\n    case CREATE_ID_ERROR:\n      return {\n        user: { ...state.user,\n          loading: false,\n          error: action.payload\n        }\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/keehoonjung/projects/react/dwitter/client/src/module/users.js"],"names":["createUser","getUser","createLoginPromiseThunk","LOGIN_ID","LOGIN_ID_SUCCESS","LOGIN_ID_ERROR","LOGOUT_ID","LOGOUT_ID_SUCCESS","LOGOUT_ID_ERROR","CREATE_ID","CREATE_ID_SUCCESS","CREATE_ID_ERROR","loginId","logoutId","dipatch","type","e","payload","createId","username","password","name","email","url","length","user","initialState","loading","login","data","error","users","state","action"],"mappings":"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","sourcesContent":["import { createUser, getUser } from \"../api/users\";\nimport { createLoginPromiseThunk } from \"../util/user_async_utils\";\n\nconst LOGIN_ID = \"LOGIN_ID\";\nconst LOGIN_ID_SUCCESS = \"LOGIN_ID_SUCCESS\";\nconst LOGIN_ID_ERROR = \"LOGIN_ID_ERROR\";\n\nconst LOGOUT_ID = \"LOGOUT_ID\";\nconst LOGOUT_ID_SUCCESS = \"LOGOUT_ID_SUCCESS\";\nconst LOGOUT_ID_ERROR = \"LOGOUT_ID_ERROR\";\n\nconst CREATE_ID = \"CREATE_ID\";\nconst CREATE_ID_SUCCESS = \"CREATE_ID_SUCCESS\";\nconst CREATE_ID_ERROR = \"CREATE_ID_ERROR\";\n\nexport const loginId = createLoginPromiseThunk(LOGIN_ID, getUser);\n\nexport const logoutId = () => (dipatch) => {\n  dipatch({ type: LOGOUT_ID });\n  try {\n    dipatch({ type: LOGOUT_ID_SUCCESS });\n  } catch (e) {\n    dipatch({ type: LOGOUT_ID_ERROR, payload: e });\n  }\n};\n\nexport const createId =\n  (username, password, name, email, url) => async (dipatch) => {\n    dipatch({ type: CREATE_ID });\n    if (password.length < 5) {\n      return dipatch({\n        type: CREATE_ID_ERROR,\n        payload: \"Error: password should be at least 5 characters\",\n      });\n    }\n    try {\n      const user = await getUser(username);\n      return dipatch({\n        type: CREATE_ID_ERROR,\n        payload: `Error: ${user.username} already exists`,\n      });\n    } catch (e) {}\n\n    try {\n      const payload = await createUser({\n        username,\n        password,\n        name,\n        email,\n        url,\n      });\n      dipatch({ type: CREATE_ID_SUCCESS, payload });\n    } catch (e) {\n      dipatch({\n        type: CREATE_ID_ERROR,\n        payload: e,\n      });\n    }\n  };\n\nconst initialState = {\n  user: {\n    loading: false,\n    login: false,\n    data: null,\n    error: null,\n  },\n};\n\nexport default function users(state = initialState, action) {\n  switch (action.type) {\n    case LOGIN_ID:\n      return {\n        user: {\n          ...state.user,\n          loading: true,\n        },\n      };\n    case LOGIN_ID_SUCCESS:\n      return {\n        user: {\n          loading: false,\n          login: true,\n          data: action.payload,\n          error: null,\n        },\n      };\n    case LOGIN_ID_ERROR:\n      return {\n        user: {\n          ...state.user,\n          loading: false,\n          error: action.payload,\n        },\n      };\n    case LOGOUT_ID:\n      return {\n        user: {\n          ...state.user,\n          loading: true,\n        },\n      };\n    case LOGOUT_ID_SUCCESS:\n      return {\n        user: {\n          ...state.user,\n          loading: false,\n          login: false,\n          data: null,\n        },\n      };\n    case LOGOUT_ID_ERROR:\n      return {\n        user: {\n          ...state.user,\n          loading: false,\n          error: action.payload,\n        },\n      };\n    case CREATE_ID:\n      return {\n        user: {\n          ...state.user,\n          loading: true,\n        },\n      };\n    case CREATE_ID_SUCCESS:\n      return {\n        user: {\n          loading: false,\n          login: true,\n          data: action.payload,\n          error: null,\n        },\n      };\n    case CREATE_ID_ERROR:\n      return {\n        user: {\n          ...state.user,\n          loading: false,\n          error: action.payload,\n        },\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}