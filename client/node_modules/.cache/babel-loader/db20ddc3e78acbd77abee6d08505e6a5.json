{"ast":null,"code":"var _jsxFileName = \"/Users/keehoonjung/projects/react/dwitter/client/src/components/tweet/tweet.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { deleteTweet, getTweets } from \"../../service/store\";\nimport styles from \"./tweet.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tweet = ({\n  item,\n  index,\n  dispatch\n}) => {\n  const onClick = () => {\n    dispatch(deleteTweet(index));\n  };\n\n  const onLink = () => {\n    dispatch(getTweets(item.useranme));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: styles.thumbnail,\n      src: item.url,\n      alt: \"thumbnail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.description,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.user,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: styles.user_name,\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: styles.user_id,\n          href: \"#\",\n          onClick: onLink,\n          children: item.useranme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.user_createdAt,\n          children: item.createdAt.toString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.text,\n        children: item.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.button_container,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.deleteBtn,\n        onClick: onClick,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.modifyBtn,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-pencil-alt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Tweet;\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(Tweet);\n\nvar _c;\n\n$RefreshReg$(_c, \"Tweet\");","map":{"version":3,"sources":["/Users/keehoonjung/projects/react/dwitter/client/src/components/tweet/tweet.tsx"],"names":["React","connect","deleteTweet","getTweets","styles","Tweet","item","index","dispatch","onClick","onLink","useranme","container","thumbnail","url","description","user","user_name","name","user_id","user_createdAt","createdAt","toString","text","button_container","deleteBtn","modifyBtn","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,WAAT,EAAsBC,SAAtB,QAAkD,qBAAlD;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;;AAQA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA0C;AACtD,QAAMC,OAAO,GAAG,MAAM;AACpBD,IAAAA,QAAQ,CAACN,WAAW,CAACK,KAAD,CAAZ,CAAR;AACD,GAFD;;AAIA,QAAMG,MAAM,GAAG,MAAM;AACnBF,IAAAA,QAAQ,CAACL,SAAS,CAACG,IAAI,CAACK,QAAN,CAAV,CAAR;AACD,GAFD;;AAIA,sBACE;AAAI,IAAA,SAAS,EAAEP,MAAM,CAACQ,SAAtB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAER,MAAM,CAACS,SAAvB;AAAkC,MAAA,GAAG,EAAEP,IAAI,CAACQ,GAA5C;AAAiD,MAAA,GAAG,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAEV,MAAM,CAACW,WAAvB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEX,MAAM,CAACY,IAAvB;AAAA,gCACE;AAAI,UAAA,SAAS,EAAEZ,MAAM,CAACa,SAAtB;AAAA,oBAAkCX,IAAI,CAACY;AAAvC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAEd,MAAM,CAACe,OAArB;AAA8B,UAAA,IAAI,EAAC,GAAnC;AAAuC,UAAA,OAAO,EAAET,MAAhD;AAAA,oBACGJ,IAAI,CAACK;AADR;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE;AAAG,UAAA,SAAS,EAAEP,MAAM,CAACgB,cAArB;AAAA,oBAAsCd,IAAI,CAACe,SAAL,CAAeC,QAAf;AAAtC;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAG,QAAA,SAAS,EAAElB,MAAM,CAACmB,IAArB;AAAA,kBAA4BjB,IAAI,CAACiB;AAAjC;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAYE;AAAK,MAAA,SAAS,EAAEnB,MAAM,CAACoB,gBAAvB;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAEpB,MAAM,CAACqB,SAA1B;AAAqC,QAAA,OAAO,EAAEhB,OAA9C;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,SAAS,EAAEL,MAAM,CAACsB,SAA1B;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAhCD;;KAAMrB,K;;AAkCN,SAASsB,kBAAT,CAA4BnB,QAA5B,EAAgD;AAC9C,SAAO;AACLA,IAAAA;AADK,GAAP;AAGD;;AAED,eAAeP,OAAO,CAAC,IAAD,EAAO0B,kBAAP,CAAP,CAAkCtB,KAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { deleteTweet, getTweets, TweetType } from \"../../service/store\";\nimport styles from \"./tweet.module.css\";\n\ntype TweetPros = {\n  item: TweetType;\n  index: Number;\n  dispatch: Dispatch;\n};\n\nconst Tweet = ({ item, index, dispatch }: TweetPros) => {\n  const onClick = () => {\n    dispatch(deleteTweet(index));\n  };\n\n  const onLink = () => {\n    dispatch(getTweets(item.useranme));\n  };\n\n  return (\n    <li className={styles.container}>\n      <img className={styles.thumbnail} src={item.url} alt=\"thumbnail\" />\n      <div className={styles.description}>\n        <div className={styles.user}>\n          <h3 className={styles.user_name}>{item.name}</h3>\n          <a className={styles.user_id} href=\"#\" onClick={onLink}>\n            {item.useranme}\n          </a>\n          <p className={styles.user_createdAt}>{item.createdAt.toString()}</p>\n        </div>\n        <p className={styles.text}>{item.text}</p>\n      </div>\n      <div className={styles.button_container}>\n        <button className={styles.deleteBtn} onClick={onClick}>\n          <i className=\"fas fa-times\"></i>\n        </button>\n        <button className={styles.modifyBtn}>\n          <i className=\"fas fa-pencil-alt\"></i>\n        </button>\n      </div>\n    </li>\n  );\n};\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    dispatch,\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(Tweet);\n"]},"metadata":{},"sourceType":"module"}