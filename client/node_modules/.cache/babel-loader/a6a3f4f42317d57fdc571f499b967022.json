{"ast":null,"code":"export const createPromiseThunk = (type, promiseCreator) => {\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n  return param => async dispatch => {\n    dispatch({\n      type\n    });\n\n    try {\n      const payload = await promiseCreator(param);\n      dispatch({\n        type: SUCCESS,\n        payload\n      });\n    } catch (e) {\n      dispatch({\n        type: ERROR,\n        payload: e,\n        error: true\n      });\n    }\n  };\n};\n\nconst defaultIdSelector = param => param;\n\nexport const createPromiseThunkById = (type, promiseCreator, idSelector = defaultIdSelector) => {\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n  return param => async dispatch => {\n    const id = idSelector(param);\n    dispatch({\n      type,\n      meta: id\n    });\n\n    try {\n      const payload = await promiseCreator(param);\n      dispatch({\n        type: SUCCESS,\n        payload,\n        meta: id\n      });\n    } catch (e) {\n      dispatch({\n        type: ERROR,\n        error: true,\n        payload: e,\n        meta: id\n      });\n    }\n  };\n};\nexport const reducerUtils = {\n  initial: (initialData = null) => ({\n    loading: false,\n    data: null,\n    error: null\n  }),\n  loading: (prevState = null) => ({\n    loading: true,\n    data: prevState,\n    error: null\n  }),\n  success: payload => ({\n    loading: false,\n    data: payload,\n    error: null\n  }),\n  error: error => ({\n    loading: false,\n    data: null,\n    error: error\n  })\n};\nexport const handleAsyncActions = (type, key) => {\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n  return (state, action) => {\n    switch (action.type) {\n      case type:\n        return { ...state,\n          [key]: reducerUtils.loading()\n        };\n\n      case SUCCESS:\n        return { ...state,\n          [key]: reducerUtils.success(action.payload)\n        };\n\n      case ERROR:\n        return { ...state,\n          [key]: reducerUtils.error(action.payload)\n        };\n\n      default:\n        return state;\n    }\n  };\n};\nexport const handleAsyncPostActions = (type, key) => {\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n  return (state, action) => {\n    const result = action.payload;\n\n    switch (action.type) {\n      case type:\n        return { ...state,\n          [key]: { ...state[key],\n            loading: true\n          }\n        };\n\n      case SUCCESS:\n        return { ...state,\n          [key]: {\n            loading: false,\n            data: action.payload ? [result, ...state[key].data] : state.posts.data,\n            error: null\n          }\n        };\n\n      case ERROR:\n        return { ...state,\n          [key]: reducerUtils.error(action.payload)\n        };\n\n      default:\n        return state;\n    }\n  };\n};\nexport const handleAsyncDeleteActions = (type, key) => {\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n  return (state, action) => {\n    switch (action.type) {\n      case type:\n        return { ...state,\n          [key]: reducerUtils.loading()\n        };\n\n      case SUCCESS:\n        return { ...state,\n          posts: { ...state.posts,\n            data: state.posts.data ? state.posts.data.filter(tweet => tweet.id !== action.payload) : null\n          }\n        };\n\n      case ERROR:\n        return { ...state,\n          [key]: reducerUtils.error(action.payload)\n        };\n\n      default:\n        return state;\n    }\n  };\n};","map":{"version":3,"sources":["/Users/keehoonjung/projects/react/dwitter/client/src/util/async_utils.js"],"names":["createPromiseThunk","type","promiseCreator","SUCCESS","ERROR","param","dispatch","payload","e","error","defaultIdSelector","createPromiseThunkById","idSelector","id","meta","reducerUtils","initial","initialData","loading","data","prevState","success","handleAsyncActions","key","state","action","handleAsyncPostActions","result","posts","handleAsyncDeleteActions","filter","tweet"],"mappings":"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","sourcesContent":["export const createPromiseThunk = (type, promiseCreator) => {\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n\n  return (param) => async (dispatch) => {\n    dispatch({ type });\n    try {\n      const payload = await promiseCreator(param);\n      dispatch({ type: SUCCESS, payload });\n    } catch (e) {\n      dispatch({ type: ERROR, payload: e, error: true });\n    }\n  };\n};\n\nconst defaultIdSelector = (param) => param;\nexport const createPromiseThunkById = (\n  type,\n  promiseCreator,\n  idSelector = defaultIdSelector\n) => {\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n\n  return (param) => async (dispatch) => {\n    const id = idSelector(param);\n    dispatch({ type, meta: id });\n    try {\n      const payload = await promiseCreator(param);\n      dispatch({ type: SUCCESS, payload, meta: id });\n    } catch (e) {\n      dispatch({ type: ERROR, error: true, payload: e, meta: id });\n    }\n  };\n};\n\nexport const reducerUtils = {\n  initial: (initialData = null) => ({\n    loading: false,\n    data: null,\n    error: null,\n  }),\n  loading: (prevState = null) => ({\n    loading: true,\n    data: prevState,\n    error: null,\n  }),\n  success: (payload) => ({\n    loading: false,\n    data: payload,\n    error: null,\n  }),\n  error: (error) => ({\n    loading: false,\n    data: null,\n    error: error,\n  }),\n};\n\nexport const handleAsyncActions = (type, key) => {\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n  return (state, action) => {\n    switch (action.type) {\n      case type:\n        return {\n          ...state,\n          [key]: reducerUtils.loading(),\n        };\n      case SUCCESS:\n        return {\n          ...state,\n          [key]: reducerUtils.success(action.payload),\n        };\n      case ERROR:\n        return {\n          ...state,\n          [key]: reducerUtils.error(action.payload),\n        };\n      default:\n        return state;\n    }\n  };\n};\n\nexport const handleAsyncPostActions = (type, key) => {\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n  return (state, action) => {\n    const result = action.payload;\n    switch (action.type) {\n      case type:\n        return {\n          ...state,\n          [key]: {\n            ...state[key],\n            loading: true,\n          },\n        };\n      case SUCCESS:\n        return {\n          ...state,\n          [key]: {\n            loading: false,\n            data: action.payload\n              ? [result, ...state[key].data]\n              : state.posts.data,\n            error: null,\n          },\n        };\n      case ERROR:\n        return {\n          ...state,\n          [key]: reducerUtils.error(action.payload),\n        };\n      default:\n        return state;\n    }\n  };\n};\n\nexport const handleAsyncDeleteActions = (type, key) => {\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n  return (state, action) => {\n    switch (action.type) {\n      case type:\n        return {\n          ...state,\n          [key]: reducerUtils.loading(),\n        };\n      case SUCCESS:\n        return {\n          ...state,\n          posts: {\n            ...state.posts,\n            data: state.posts.data\n              ? state.posts.data.filter((tweet) => tweet.id !== action.payload)\n              : null,\n          },\n        };\n      case ERROR:\n        return {\n          ...state,\n          [key]: reducerUtils.error(action.payload),\n        };\n      default:\n        return state;\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}