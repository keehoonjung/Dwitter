{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst data = [{\n  id: 1,\n  text: \"Hello\",\n  createdAt: Date.now(),\n  name: \"JK\",\n  useranme: \"JK\",\n  url: \"https://res.cloudinary.com/dpvhkp8oq/image/upload/v1632646994/Motion/moxvxyhmceuumjye3lth.jpg\"\n}, {\n  id: 2,\n  text: \"Hello2\",\n  createdAt: Date.now(),\n  name: \"song\",\n  useranme: \"song\",\n  url: \"https://res.cloudinary.com/dpvhkp8oq/image/upload/v1632646994/Motion/moxvxyhmceuumjye3lth.jpg\"\n}];\nconst tweetsSlice = createSlice({\n  name: \"Tweets\",\n  initialState: data,\n  reducers: {\n    postTweet: (state, action) => {\n      state.push(action.payload);\n    }\n  }\n});\nconst dataStore = configureStore({\n  reducer: tweetsSlice.reducer\n});\nexport default dataStore;","map":{"version":3,"sources":["/Users/keehoonjung/projects/react/dwitter/client/src/service/store.tsx"],"names":["configureStore","createSlice","data","id","text","createdAt","Date","now","name","useranme","url","tweetsSlice","initialState","reducers","postTweet","state","action","push","payload","dataStore","reducer"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,kBAA5C;AAiBA,MAAMC,IAAI,GAAG,CACX;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EAHb;AAIEC,EAAAA,IAAI,EAAE,IAJR;AAKEC,EAAAA,QAAQ,EAAE,IALZ;AAMEC,EAAAA,GAAG,EAAE;AANP,CADW,EASX;AACEP,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,QAFR;AAGEC,EAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EAHb;AAIEC,EAAAA,IAAI,EAAE,MAJR;AAKEC,EAAAA,QAAQ,EAAE,MALZ;AAMEC,EAAAA,GAAG,EAAE;AANP,CATW,CAAb;AAmBA,MAAMC,WAAW,GAAGV,WAAW,CAAC;AAC9BO,EAAAA,IAAI,EAAE,QADwB;AAE9BI,EAAAA,YAAY,EAAEV,IAFgB;AAG9BW,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAqBC,MAArB,KAAiD;AAC1DD,MAAAA,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACE,OAAlB;AACD;AAHO;AAHoB,CAAD,CAA/B;AAUA,MAAMC,SAAS,GAAGnB,cAAc,CAAC;AAAEoB,EAAAA,OAAO,EAAET,WAAW,CAACS;AAAvB,CAAD,CAAhC;AAEA,eAAeD,SAAf","sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\n\nexport type TweetType = {\n  id: number;\n  text: string;\n  createdAt: number;\n  name: string;\n  useranme: string;\n  url: string;\n};\nexport type TweetsState = TweetType[];\n\ntype postTweetAction = {\n  type: string;\n  payload: TweetType;\n};\n\nconst data = [\n  {\n    id: 1,\n    text: \"Hello\",\n    createdAt: Date.now(),\n    name: \"JK\",\n    useranme: \"JK\",\n    url: \"https://res.cloudinary.com/dpvhkp8oq/image/upload/v1632646994/Motion/moxvxyhmceuumjye3lth.jpg\",\n  },\n  {\n    id: 2,\n    text: \"Hello2\",\n    createdAt: Date.now(),\n    name: \"song\",\n    useranme: \"song\",\n    url: \"https://res.cloudinary.com/dpvhkp8oq/image/upload/v1632646994/Motion/moxvxyhmceuumjye3lth.jpg\",\n  },\n];\n\nconst tweetsSlice = createSlice({\n  name: \"Tweets\",\n  initialState: data,\n  reducers: {\n    postTweet: (state: TweetsState, action: postTweetAction) => {\n      state.push(action.payload);\n    },\n  },\n});\n\nconst dataStore = configureStore({ reducer: tweetsSlice.reducer });\n\nexport default dataStore;\n"]},"metadata":{},"sourceType":"module"}