{"ast":null,"code":"var _jsxFileName = \"/Users/keehoonjung/projects/react/dwitter/client/src/container/login_container.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport Login from \"../components/login/login\";\nimport TokenStorage from \"../db/token\";\nimport { createId, loginId } from \"../module/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LoginContainer = props => {\n  _s();\n\n  const {\n    loading,\n    error,\n    login\n  } = useSelector(state => state.user.user);\n  const tokenStorage = new TokenStorage();\n  const token = tokenStorage.getToken();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const onLoginId = (username, password) => {\n    console.log(username, password);\n    dispatch(loginId({\n      username,\n      password\n    }));\n  };\n\n  const onCreateId = (username, password, name, email, url) => {\n    dispatch(createId({\n      username,\n      password,\n      name,\n      email,\n      url\n    }));\n  };\n\n  useEffect(() => {// if (login) {\n    //   history.push({\n    //     pathname: \"/main\",\n    //   });\n    // }\n  }, [login, history]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uB85C\\uB529\\uC911\\uC785\\uB2C8\\uB2E4\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Login, {\n      onLoginId: onLoginId,\n      onCreateId: onCreateId,\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(LoginContainer, \"7efJlrVCk324iQAn36QTReEkJzU=\", false, function () {\n  return [useSelector, useDispatch, useHistory];\n});\n\n_c = LoginContainer;\nexport default LoginContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginContainer\");","map":{"version":3,"sources":["/Users/keehoonjung/projects/react/dwitter/client/src/container/login_container.jsx"],"names":["React","useEffect","useDispatch","useSelector","useHistory","Login","TokenStorage","createId","loginId","LoginContainer","props","loading","error","login","state","user","tokenStorage","token","getToken","dispatch","history","onLoginId","username","password","console","log","onCreateId","name","email","url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,YAAP,MAAyB,aAAzB;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,gBAAlC;;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA4BV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWA,IAAvB,CAA7C;AACA,QAAMC,YAAY,GAAG,IAAIV,YAAJ,EAArB;AACA,QAAMW,KAAK,GAAGD,YAAY,CAACE,QAAb,EAAd;AACA,QAAMC,QAAQ,GAAGjB,WAAW,EAA5B;AACA,QAAMkB,OAAO,GAAGhB,UAAU,EAA1B;;AACA,QAAMiB,SAAS,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACxCC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAsBC,QAAtB;AACAJ,IAAAA,QAAQ,CAACX,OAAO,CAAC;AAAEc,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAD,CAAR,CAAR;AACD,GAHD;;AAIA,QAAMG,UAAU,GAAG,CAACJ,QAAD,EAAWC,QAAX,EAAqBI,IAArB,EAA2BC,KAA3B,EAAkCC,GAAlC,KAA0C;AAC3DV,IAAAA,QAAQ,CAACZ,QAAQ,CAAC;AAAEe,MAAAA,QAAF;AAAYC,MAAAA,QAAZ;AAAsBI,MAAAA,IAAtB;AAA4BC,MAAAA,KAA5B;AAAmCC,MAAAA;AAAnC,KAAD,CAAT,CAAR;AACD,GAFD;;AAGA5B,EAAAA,SAAS,CAAC,MAAM,CACd;AACA;AACA;AACA;AACA;AACD,GANQ,EAMN,CAACY,KAAD,EAAQO,OAAR,CANM,CAAT;AAQA,MAAIT,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,sBACE;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAEU,SAAlB;AAA6B,MAAA,UAAU,EAAEK,UAAzC;AAAqD,MAAA,KAAK,EAAEd;AAA5D;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,CA3BD;;GAAMH,c;UAC8BN,W,EAGjBD,W,EACDE,U;;;KALZK,c;AA6BN,eAAeA,cAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport Login from \"../components/login/login\";\nimport TokenStorage from \"../db/token\";\nimport { createId, loginId } from \"../module/user\";\n\nconst LoginContainer = (props) => {\n  const { loading, error, login } = useSelector((state) => state.user.user);\n  const tokenStorage = new TokenStorage();\n  const token = tokenStorage.getToken();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const onLoginId = (username, password) => {\n    console.log(username, password);\n    dispatch(loginId({ username, password }));\n  };\n  const onCreateId = (username, password, name, email, url) => {\n    dispatch(createId({ username, password, name, email, url }));\n  };\n  useEffect(() => {\n    // if (login) {\n    //   history.push({\n    //     pathname: \"/main\",\n    //   });\n    // }\n  }, [login, history]);\n\n  if (loading) return <div>로딩중입니다</div>;\n  return (\n    <>\n      <Login onLoginId={onLoginId} onCreateId={onCreateId} error={error} />\n    </>\n  );\n};\n\nexport default LoginContainer;\n"]},"metadata":{},"sourceType":"module"}