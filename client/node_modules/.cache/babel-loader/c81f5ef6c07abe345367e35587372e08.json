{"ast":null,"code":"import { createUser, getUser } from \"../api/user\";\nimport { CreateIdPromiseThunk, createLoginPromiseThunk, userHandleAsyncActions, userReducerUtils } from \"../util/user_async_utils\";\nimport HttpClient from \"../network/http\";\nimport UserService from \"../api/user\";\nconst baseUrl = \"http://localhost:8080\";\nconst httpClient = new HttpClient();\nconst LOGIN_ID = \"LOGIN_ID\";\nconst LOGIN_ID_SUCCESS = \"LOGIN_ID_SUCCESS\";\nconst LOGIN_ID_ERROR = \"LOGIN_ID_ERROR\";\nconst LOGOUT_ID = \"LOGOUT_ID\";\nconst LOGOUT_ID_SUCCESS = \"LOGOUT_ID_SUCCESS\";\nconst LOGOUT_ID_ERROR = \"LOGOUT_ID_ERROR\";\nconst CREATE_ID = \"CREATE_ID\";\nconst CREATE_ID_SUCCESS = \"CREATE_ID_SUCCESS\";\nconst CREATE_ID_ERROR = \"CREATE_ID_ERROR\";\nexport const loginId = createLoginPromiseThunk(LOGIN_ID, getUser);\nexport const logoutId = () => dipatch => {\n  dipatch({\n    type: LOGOUT_ID_SUCCESS\n  });\n};\nexport const createId = CreateIdPromiseThunk(CREATE_ID, createUser);\nconst initialState = {\n  user: userReducerUtils.initial\n};\nexport default function users(state = initialState, action) {\n  switch (action.type) {\n    case LOGIN_ID:\n    case LOGIN_ID_SUCCESS:\n    case LOGIN_ID_ERROR:\n      return userHandleAsyncActions(LOGIN_ID, \"login\")(state, action);\n\n    case LOGOUT_ID:\n    case LOGOUT_ID_SUCCESS:\n    case LOGOUT_ID_ERROR:\n      return userHandleAsyncActions(LOGOUT_ID, \"logout\")(state, action);\n\n    case CREATE_ID:\n    case CREATE_ID_SUCCESS:\n    case CREATE_ID_ERROR:\n      return userHandleAsyncActions(CREATE_ID, \"login\")(state, action);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/keehoonjung/projects/react/dwitter/client/src/module/user.js"],"names":["createUser","getUser","CreateIdPromiseThunk","createLoginPromiseThunk","userHandleAsyncActions","userReducerUtils","HttpClient","UserService","baseUrl","httpClient","LOGIN_ID","LOGIN_ID_SUCCESS","LOGIN_ID_ERROR","LOGOUT_ID","LOGOUT_ID_SUCCESS","LOGOUT_ID_ERROR","CREATE_ID","CREATE_ID_SUCCESS","CREATE_ID_ERROR","loginId","logoutId","dipatch","type","createId","initialState","user","initial","users","state","action"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,OAArB,QAAoC,aAApC;AACA,SACEC,oBADF,EAEEC,uBAFF,EAGEC,sBAHF,EAIEC,gBAJF,QAKO,0BALP;AAMA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AAEA,MAAMC,OAAO,GAAG,uBAAhB;AACA,MAAMC,UAAU,GAAG,IAAIH,UAAJ,EAAnB;AAEA,MAAMI,QAAQ,GAAG,UAAjB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,cAAc,GAAG,gBAAvB;AAEA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,eAAe,GAAG,iBAAxB;AAEA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,eAAe,GAAG,iBAAxB;AAEA,OAAO,MAAMC,OAAO,GAAGhB,uBAAuB,CAACO,QAAD,EAAWT,OAAX,CAAvC;AAEP,OAAO,MAAMmB,QAAQ,GAAG,MAAOC,OAAD,IAAa;AACzCA,EAAAA,OAAO,CAAC;AAAEC,IAAAA,IAAI,EAAER;AAAR,GAAD,CAAP;AACD,CAFM;AAIP,OAAO,MAAMS,QAAQ,GAAGrB,oBAAoB,CAACc,SAAD,EAAYhB,UAAZ,CAArC;AAEP,MAAMwB,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAEpB,gBAAgB,CAACqB;AADJ,CAArB;AAIA,eAAe,SAASC,KAAT,CAAeC,KAAK,GAAGJ,YAAvB,EAAqCK,MAArC,EAA6C;AAC1D,UAAQA,MAAM,CAACP,IAAf;AACE,SAAKZ,QAAL;AACA,SAAKC,gBAAL;AACA,SAAKC,cAAL;AACE,aAAOR,sBAAsB,CAACM,QAAD,EAAW,OAAX,CAAtB,CAA0CkB,KAA1C,EAAiDC,MAAjD,CAAP;;AACF,SAAKhB,SAAL;AACA,SAAKC,iBAAL;AACA,SAAKC,eAAL;AACE,aAAOX,sBAAsB,CAACS,SAAD,EAAY,QAAZ,CAAtB,CAA4Ce,KAA5C,EAAmDC,MAAnD,CAAP;;AACF,SAAKb,SAAL;AACA,SAAKC,iBAAL;AACA,SAAKC,eAAL;AACE,aAAOd,sBAAsB,CAACY,SAAD,EAAY,OAAZ,CAAtB,CAA2CY,KAA3C,EAAkDC,MAAlD,CAAP;;AACF;AACE,aAAOD,KAAP;AAdJ;AAgBD","sourcesContent":["import { createUser, getUser } from \"../api/user\";\nimport {\n  CreateIdPromiseThunk,\n  createLoginPromiseThunk,\n  userHandleAsyncActions,\n  userReducerUtils,\n} from \"../util/user_async_utils\";\nimport HttpClient from \"../network/http\";\nimport UserService from \"../api/user\";\n\nconst baseUrl = \"http://localhost:8080\";\nconst httpClient = new HttpClient();\n\nconst LOGIN_ID = \"LOGIN_ID\";\nconst LOGIN_ID_SUCCESS = \"LOGIN_ID_SUCCESS\";\nconst LOGIN_ID_ERROR = \"LOGIN_ID_ERROR\";\n\nconst LOGOUT_ID = \"LOGOUT_ID\";\nconst LOGOUT_ID_SUCCESS = \"LOGOUT_ID_SUCCESS\";\nconst LOGOUT_ID_ERROR = \"LOGOUT_ID_ERROR\";\n\nconst CREATE_ID = \"CREATE_ID\";\nconst CREATE_ID_SUCCESS = \"CREATE_ID_SUCCESS\";\nconst CREATE_ID_ERROR = \"CREATE_ID_ERROR\";\n\nexport const loginId = createLoginPromiseThunk(LOGIN_ID, getUser);\n\nexport const logoutId = () => (dipatch) => {\n  dipatch({ type: LOGOUT_ID_SUCCESS });\n};\n\nexport const createId = CreateIdPromiseThunk(CREATE_ID, createUser);\n\nconst initialState = {\n  user: userReducerUtils.initial,\n};\n\nexport default function users(state = initialState, action) {\n  switch (action.type) {\n    case LOGIN_ID:\n    case LOGIN_ID_SUCCESS:\n    case LOGIN_ID_ERROR:\n      return userHandleAsyncActions(LOGIN_ID, \"login\")(state, action);\n    case LOGOUT_ID:\n    case LOGOUT_ID_SUCCESS:\n    case LOGOUT_ID_ERROR:\n      return userHandleAsyncActions(LOGOUT_ID, \"logout\")(state, action);\n    case CREATE_ID:\n    case CREATE_ID_SUCCESS:\n    case CREATE_ID_ERROR:\n      return userHandleAsyncActions(CREATE_ID, \"login\")(state, action);\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}