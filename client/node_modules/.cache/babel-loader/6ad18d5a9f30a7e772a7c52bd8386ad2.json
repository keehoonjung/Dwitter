{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst userData = {\n  JK: {\n    name: \"JK\",\n    useranme: \"JK\",\n    url: \"https://res.cloudinary.com/dpvhkp8oq/image/upload/v1632646994/Motion/moxvxyhmceuumjye3lth.jpg\"\n  },\n  song: {\n    name: \"songsong\",\n    useranme: \"song\",\n    url: \"https://res.cloudinary.com/dpvhkp8oq/image/upload/v1632646994/Motion/moxvxyhmceuumjye3lth.jpg\"\n  }\n};\nconst tweetData = {\n  \"1\": {\n    id: \"3\",\n    text: \"hello\",\n    createdAt: Date.now(),\n    name: \"JK\",\n    username: \"JKK\",\n    url: \"https://res.cloudinary.com/dpvhkp8oq/image/upload/v1632646994/Motion/moxvxyhmceuumjye3lth.jpg\"\n  }\n};\nconst tweetsSlice = createSlice({\n  name: \"Tweets\",\n  initialState: {\n    user: userData,\n    data: tweetData\n  },\n  reducers: {\n    postTweet: (state, action) => {}\n  }\n});\nconst dataStore = configureStore({\n  reducer: tweetsSlice.reducer\n}); // export const { postTweet } = tweetsSlice.actions;\n\nexport default dataStore; // \"1\": {\n//   id: \"1\",\n//   text: \"Hello\",\n//   createdAt: Date.now(),\n//   name: \"JK\",\n//   useranme: \"JK\",\n//   url: \"https://res.cloudinary.com/dpvhkp8oq/image/upload/v1632646994/Motion/moxvxyhmceuumjye3lth.jpg\",\n// },\n// \"2\": {\n//   id: \"2\",\n//   text: \"Hello2\",\n//   createdAt: Date.now(),\n//   name: \"song\",\n//   useranme: \"song\",\n//   url: \"https://res.cloudinary.com/dpvhkp8oq/image/upload/v1632646994/Motion/moxvxyhmceuumjye3lth.jpg\",\n// },","map":{"version":3,"sources":["/Users/keehoonjung/projects/react/dwitter/client/src/service/store.tsx"],"names":["configureStore","createSlice","userData","JK","name","useranme","url","song","tweetData","id","text","createdAt","Date","now","username","tweetsSlice","initialState","user","data","reducers","postTweet","state","action","dataStore","reducer"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,kBAA5C;AA2BA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,EAAE,EAAE;AACFC,IAAAA,IAAI,EAAE,IADJ;AAEFC,IAAAA,QAAQ,EAAE,IAFR;AAGFC,IAAAA,GAAG,EAAE;AAHH,GADW;AAMfC,EAAAA,IAAI,EAAE;AACJH,IAAAA,IAAI,EAAE,UADF;AAEJC,IAAAA,QAAQ,EAAE,MAFN;AAGJC,IAAAA,GAAG,EAAE;AAHD;AANS,CAAjB;AAaA,MAAME,SAAS,GAAG;AAChB,OAAK;AACHC,IAAAA,EAAE,EAAE,GADD;AAEHC,IAAAA,IAAI,EAAE,OAFH;AAGHC,IAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EAHR;AAIHT,IAAAA,IAAI,EAAE,IAJH;AAKHU,IAAAA,QAAQ,EAAE,KALP;AAMHR,IAAAA,GAAG,EAAE;AANF;AADW,CAAlB;AAWA,MAAMS,WAAW,GAAGd,WAAW,CAAC;AAC9BG,EAAAA,IAAI,EAAE,QADwB;AAE9BY,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAAEf,QADM;AAEZgB,IAAAA,IAAI,EAAEV;AAFM,GAFgB;AAM9BW,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAqBC,MAArB,KAAiD,CAAE;AADtD;AANoB,CAAD,CAA/B;AAWA,MAAMC,SAAS,GAAGvB,cAAc,CAAC;AAAEwB,EAAAA,OAAO,EAAET,WAAW,CAACS;AAAvB,CAAD,CAAhC,C,CAEA;;AAEA,eAAeD,SAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\n\nexport type TweetType = {\n  id: number;\n  text: string;\n  createdAt: number;\n  name: string;\n  useranme: string;\n  url: string;\n};\n\nexport type UserType = {\n  name: string;\n  useranme: string;\n  url: string;\n};\n\nexport type TweetsState = {\n  user: { [username: string]: UserType };\n  data: { [tweetId: string]: TweetType };\n};\n\ntype postTweetAction = {\n  type: string;\n  payload: TweetType;\n};\n\nconst userData = {\n  JK: {\n    name: \"JK\",\n    useranme: \"JK\",\n    url: \"https://res.cloudinary.com/dpvhkp8oq/image/upload/v1632646994/Motion/moxvxyhmceuumjye3lth.jpg\",\n  },\n  song: {\n    name: \"songsong\",\n    useranme: \"song\",\n    url: \"https://res.cloudinary.com/dpvhkp8oq/image/upload/v1632646994/Motion/moxvxyhmceuumjye3lth.jpg\",\n  },\n};\n\nconst tweetData = {\n  \"1\": {\n    id: \"3\",\n    text: \"hello\",\n    createdAt: Date.now(),\n    name: \"JK\",\n    username: \"JKK\",\n    url: \"https://res.cloudinary.com/dpvhkp8oq/image/upload/v1632646994/Motion/moxvxyhmceuumjye3lth.jpg\",\n  },\n};\n\nconst tweetsSlice = createSlice({\n  name: \"Tweets\",\n  initialState: {\n    user: userData,\n    data: tweetData,\n  },\n  reducers: {\n    postTweet: (state: TweetsState, action: postTweetAction) => {},\n  },\n});\n\nconst dataStore = configureStore({ reducer: tweetsSlice.reducer });\n\n// export const { postTweet } = tweetsSlice.actions;\n\nexport default dataStore;\n\n// \"1\": {\n//   id: \"1\",\n//   text: \"Hello\",\n//   createdAt: Date.now(),\n//   name: \"JK\",\n//   useranme: \"JK\",\n//   url: \"https://res.cloudinary.com/dpvhkp8oq/image/upload/v1632646994/Motion/moxvxyhmceuumjye3lth.jpg\",\n// },\n// \"2\": {\n//   id: \"2\",\n//   text: \"Hello2\",\n//   createdAt: Date.now(),\n//   name: \"song\",\n//   useranme: \"song\",\n//   url: \"https://res.cloudinary.com/dpvhkp8oq/image/upload/v1632646994/Motion/moxvxyhmceuumjye3lth.jpg\",\n// },\n"]},"metadata":{},"sourceType":"module"}