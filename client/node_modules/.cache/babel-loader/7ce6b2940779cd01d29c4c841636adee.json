{"ast":null,"code":"var _jsxFileName = \"/Users/keehoonjung/projects/react/dwitter/client/src/components/tweet/tweet.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { deleteTweet, getTweets } from \"../../service/store\";\nimport UpdateTweet from \"../update_tweet/update_tweet\";\nimport styles from \"./tweet.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tweet = ({\n  item,\n  index,\n  dispatch\n}) => {\n  _s();\n\n  const [update, updateSet] = useState(false);\n\n  const onClick = () => {\n    dispatch(deleteTweet(index));\n  };\n\n  const onLink = () => {\n    dispatch(getTweets(item.useranme));\n  };\n\n  const onUpdate = () => {\n    updateSet(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: `${styles.container} ${onUpdateSetting(update)}`,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: styles.thumbnail,\n      src: item.url,\n      alt: \"thumbnail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.description,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.user,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: styles.user_name,\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: styles.user_id,\n          href: \"#\",\n          onClick: onLink,\n          children: item.useranme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.user_createdAt,\n          children: calculateDate(item.createdAt)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.text,\n        children: item.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), onUpdate && /*#__PURE__*/_jsxDEV(UpdateTweet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.button_container,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.deleteBtn,\n        onClick: onClick,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.updateBtn,\n        onClick: onUpdate,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-pencil-alt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tweet, \"fq6SFlvWDoBHAKmAN7b4JyJbvy4=\");\n\n_c = Tweet;\n\nfunction onUpdateSetting(onUpdate) {\n  if (onUpdate) {\n    return styles.onUpdate;\n  }\n}\n\nfunction calculateDate(date) {\n  const newDate = new Date(date);\n  const diffDate = Date.now() - date;\n  const second = Math.floor(diffDate / 1000);\n  const minute = Math.floor(second / 60);\n  const hour = Math.floor(minute / 60);\n  const day = Math.floor(hour / 24);\n\n  if (day >= 30) {\n    return `· on ${newDate.getMonth()}월 ${newDate.getDate()} `;\n  }\n\n  if (day >= 1) {\n    return `· ${day} days ago`;\n  }\n\n  if (hour >= 1) {\n    return `· ${hour} hours ago`;\n  }\n\n  if (minute >= 1) {\n    return `· ${minute} minute ago`;\n  }\n\n  return `· just now`;\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(Tweet);\n\nvar _c;\n\n$RefreshReg$(_c, \"Tweet\");","map":{"version":3,"sources":["/Users/keehoonjung/projects/react/dwitter/client/src/components/tweet/tweet.tsx"],"names":["React","useState","connect","deleteTweet","getTweets","UpdateTweet","styles","Tweet","item","index","dispatch","update","updateSet","onClick","onLink","useranme","onUpdate","container","onUpdateSetting","thumbnail","url","description","user","user_name","name","user_id","user_createdAt","calculateDate","createdAt","text","button_container","deleteBtn","updateBtn","date","newDate","Date","diffDate","now","second","Math","floor","minute","hour","day","getMonth","getDate","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { deleteTweet, getTweets, TweetType } from \"../../service/store\";\nimport UpdateTweet from \"../update_tweet/update_tweet\";\nimport styles from \"./tweet.module.css\";\n\ntype TweetPros = {\n  item: TweetType;\n  index: number;\n  dispatch: Dispatch;\n};\n\nconst Tweet = ({ item, index, dispatch }: TweetPros) => {\n  const [update, updateSet] = useState(false);\n  const onClick = () => {\n    dispatch(deleteTweet(index));\n  };\n\n  const onLink = () => {\n    dispatch(getTweets(item.useranme));\n  };\n\n  const onUpdate = () => {\n    updateSet(true);\n  };\n\n  return (\n    <li className={`${styles.container} ${onUpdateSetting(update)}`}>\n      <img className={styles.thumbnail} src={item.url} alt=\"thumbnail\" />\n      <div className={styles.description}>\n        <div className={styles.user}>\n          <h3 className={styles.user_name}>{item.name}</h3>\n          <a className={styles.user_id} href=\"#\" onClick={onLink}>\n            {item.useranme}\n          </a>\n          <p className={styles.user_createdAt}>\n            {calculateDate(item.createdAt!)}\n          </p>\n        </div>\n        <p className={styles.text}>{item.text}</p>\n        {onUpdate && <UpdateTweet />}\n      </div>\n      <div className={styles.button_container}>\n        <button className={styles.deleteBtn} onClick={onClick}>\n          <i className=\"fas fa-times\"></i>\n        </button>\n        <button className={styles.updateBtn} onClick={onUpdate}>\n          <i className=\"fas fa-pencil-alt\"></i>\n        </button>\n      </div>\n    </li>\n  );\n};\n\nfunction onUpdateSetting(onUpdate: boolean) {\n  if (onUpdate) {\n    return styles.onUpdate;\n  }\n}\n\nfunction calculateDate(date: number) {\n  const newDate = new Date(date);\n  const diffDate = Date.now() - date;\n  const second = Math.floor(diffDate / 1000);\n  const minute = Math.floor(second / 60);\n  const hour = Math.floor(minute / 60);\n  const day = Math.floor(hour / 24);\n  if (day >= 30) {\n    return `· on ${newDate.getMonth()}월 ${newDate.getDate()} `;\n  }\n  if (day >= 1) {\n    return `· ${day} days ago`;\n  }\n  if (hour >= 1) {\n    return `· ${hour} hours ago`;\n  }\n  if (minute >= 1) {\n    return `· ${minute} minute ago`;\n  }\n  return `· just now`;\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    dispatch,\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(Tweet);\n"]},"metadata":{},"sourceType":"module"}