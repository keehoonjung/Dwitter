{"ast":null,"code":"import { getUser } from \"../api/users\";\nconst LOGIN_ID = \"LOGIN_ID\";\nconst LOGIN_ID_SUCCESS = \"LOGIN_ID_SUCCESS\";\nconst LOGIN_ID_ERROR = \"LOGIN_ID_ERROR\";\nconst CREATE_ID = \"CREATE_ID\";\nconst CREATE_ID_SUCCESS = \"CREATE_ID_SUCCESS\";\nconst CREATE_ID_ERROR = \"CREATE_ID_ERROR\";\nexport const loginId = (id, password) => async dispatch => {\n  dispatch({\n    type: LOGIN_ID\n  });\n\n  try {\n    const user = await getUser(id);\n\n    if (user) {\n      user.password === password ? dispatch({\n        type: LOGIN_ID_SUCCESS,\n        payload: user\n      }) : dispatch({\n        type: LOGIN_ID_ERROR,\n        plyload: \"login fail\"\n      });\n    } else {\n      dispatch({\n        type: LOGIN_ID_ERROR,\n        plyload: \"login fail\"\n      });\n    }\n  } catch (e) {\n    dispatch({\n      type: LOGIN_ID_ERROR,\n      plyload: e\n    });\n  }\n};\nconst initialState = {\n  user: {\n    loading: false,\n    login: false,\n    data: null,\n    error: null\n  }\n};\nexport default function users(state = initialState, action) {\n  switch (action.type) {\n    case LOGIN_ID:\n      return {\n        user: { ...state.user,\n          loading: true\n        }\n      };\n\n    case LOGIN_ID_SUCCESS:\n      console.log(action.payload);\n      return {\n        user: { ...state.user,\n          loading: false,\n          login: true,\n          data: action.payload\n        }\n      };\n\n    case LOGIN_ID_ERROR:\n      return {\n        user: { ...state.user,\n          loading: false,\n          error: action.payload\n        }\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/keehoonjung/projects/react/dwitter/client/src/module/users.js"],"names":["getUser","LOGIN_ID","LOGIN_ID_SUCCESS","LOGIN_ID_ERROR","CREATE_ID","CREATE_ID_SUCCESS","CREATE_ID_ERROR","loginId","id","password","dispatch","type","user","payload","plyload","e","initialState","loading","login","data","error","users","state","action","console","log"],"mappings":"AAAA,SAASA,OAAT,QAAwB,cAAxB;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,cAAc,GAAG,gBAAvB;AAEA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,eAAe,GAAG,iBAAxB;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,EAAD,EAAKC,QAAL,KAAkB,MAAOC,QAAP,IAAoB;AAC3DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEV;AAAR,GAAD,CAAR;;AACA,MAAI;AACF,UAAMW,IAAI,GAAG,MAAMZ,OAAO,CAACQ,EAAD,CAA1B;;AACA,QAAII,IAAJ,EAAU;AACRA,MAAAA,IAAI,CAACH,QAAL,KAAkBA,QAAlB,GACIC,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAET,gBAAR;AAA0BW,QAAAA,OAAO,EAAED;AAAnC,OAAD,CADZ,GAEIF,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAER,cAAR;AAAwBW,QAAAA,OAAO,EAAE;AAAjC,OAAD,CAFZ;AAGD,KAJD,MAIO;AACLJ,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAER,cAAR;AAAwBW,QAAAA,OAAO,EAAE;AAAjC,OAAD,CAAR;AACD;AACF,GATD,CASE,OAAOC,CAAP,EAAU;AACVL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,cAAR;AAAwBW,MAAAA,OAAO,EAAEC;AAAjC,KAAD,CAAR;AACD;AACF,CAdM;AAgBP,MAAMC,YAAY,GAAG;AACnBJ,EAAAA,IAAI,EAAE;AACJK,IAAAA,OAAO,EAAE,KADL;AAEJC,IAAAA,KAAK,EAAE,KAFH;AAGJC,IAAAA,IAAI,EAAE,IAHF;AAIJC,IAAAA,KAAK,EAAE;AAJH;AADa,CAArB;AASA,eAAe,SAASC,KAAT,CAAeC,KAAK,GAAGN,YAAvB,EAAqCO,MAArC,EAA6C;AAC1D,UAAQA,MAAM,CAACZ,IAAf;AACE,SAAKV,QAAL;AACE,aAAO;AACLW,QAAAA,IAAI,EAAE,EACJ,GAAGU,KAAK,CAACV,IADL;AAEJK,UAAAA,OAAO,EAAE;AAFL;AADD,OAAP;;AAMF,SAAKf,gBAAL;AACEsB,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACV,OAAnB;AACA,aAAO;AACLD,QAAAA,IAAI,EAAE,EACJ,GAAGU,KAAK,CAACV,IADL;AAEJK,UAAAA,OAAO,EAAE,KAFL;AAGJC,UAAAA,KAAK,EAAE,IAHH;AAIJC,UAAAA,IAAI,EAAEI,MAAM,CAACV;AAJT;AADD,OAAP;;AAQF,SAAKV,cAAL;AACE,aAAO;AACLS,QAAAA,IAAI,EAAE,EACJ,GAAGU,KAAK,CAACV,IADL;AAEJK,UAAAA,OAAO,EAAE,KAFL;AAGJG,UAAAA,KAAK,EAAEG,MAAM,CAACV;AAHV;AADD,OAAP;;AAOF;AACE,aAAOS,KAAP;AA3BJ;AA6BD","sourcesContent":["import { getUser } from \"../api/users\";\n\nconst LOGIN_ID = \"LOGIN_ID\";\nconst LOGIN_ID_SUCCESS = \"LOGIN_ID_SUCCESS\";\nconst LOGIN_ID_ERROR = \"LOGIN_ID_ERROR\";\n\nconst CREATE_ID = \"CREATE_ID\";\nconst CREATE_ID_SUCCESS = \"CREATE_ID_SUCCESS\";\nconst CREATE_ID_ERROR = \"CREATE_ID_ERROR\";\n\nexport const loginId = (id, password) => async (dispatch) => {\n  dispatch({ type: LOGIN_ID });\n  try {\n    const user = await getUser(id);\n    if (user) {\n      user.password === password\n        ? dispatch({ type: LOGIN_ID_SUCCESS, payload: user })\n        : dispatch({ type: LOGIN_ID_ERROR, plyload: \"login fail\" });\n    } else {\n      dispatch({ type: LOGIN_ID_ERROR, plyload: \"login fail\" });\n    }\n  } catch (e) {\n    dispatch({ type: LOGIN_ID_ERROR, plyload: e });\n  }\n};\n\nconst initialState = {\n  user: {\n    loading: false,\n    login: false,\n    data: null,\n    error: null,\n  },\n};\n\nexport default function users(state = initialState, action) {\n  switch (action.type) {\n    case LOGIN_ID:\n      return {\n        user: {\n          ...state.user,\n          loading: true,\n        },\n      };\n    case LOGIN_ID_SUCCESS:\n      console.log(action.payload);\n      return {\n        user: {\n          ...state.user,\n          loading: false,\n          login: true,\n          data: action.payload,\n        },\n      };\n    case LOGIN_ID_ERROR:\n      return {\n        user: {\n          ...state.user,\n          loading: false,\n          error: action.payload,\n        },\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}