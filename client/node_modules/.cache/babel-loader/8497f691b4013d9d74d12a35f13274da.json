{"ast":null,"code":"const url = \"http://localhost:8080/tweets\";\nexport default class TweetService {\n  constructor(http) {\n    this.getTweets = async (username = \"\") => {\n      return await this.http.fetch(`?username=${username}`, {\n        method: \"GET\"\n      });\n    };\n\n    this.getTweetsById = async id => {\n      return await this.http.fetch(`/${id}`, {\n        method: \"GET\"\n      });\n    };\n\n    this.postTweet = async ({\n      text,\n      name,\n      username\n    }) => {\n      return await this.http.fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          text,\n          name,\n          username\n        })\n      });\n    };\n\n    this.deleteTweet = async id => {\n      return await this.http.fetch(`/${id}`, {\n        method: \"DELETE\"\n      });\n    };\n\n    this.updateTweet = async ({\n      id,\n      text\n    }) => {\n      return await this.http.fetch(`${url}/${id}`, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          text\n        })\n      });\n    };\n\n    this.http = http;\n  }\n\n}","map":{"version":3,"sources":["/Users/keehoonjung/projects/react/dwitter/client/src/api/tweets.js"],"names":["url","TweetService","constructor","http","getTweets","username","fetch","method","getTweetsById","id","postTweet","text","name","body","JSON","stringify","deleteTweet","updateTweet"],"mappings":"AAAA,MAAMA,GAAG,GAAG,8BAAZ;AAEA,eAAe,MAAMC,YAAN,CAAmB;AAChCC,EAAAA,WAAW,CAACC,IAAD,EAAO;AAAA,SAGlBC,SAHkB,GAGN,OAAOC,QAAQ,GAAG,EAAlB,KAAyB;AACnC,aAAO,MAAM,KAAKF,IAAL,CAAUG,KAAV,CAAiB,aAAYD,QAAS,EAAtC,EAAyC;AACpDE,QAAAA,MAAM,EAAE;AAD4C,OAAzC,CAAb;AAGD,KAPiB;;AAAA,SASlBC,aATkB,GASF,MAAOC,EAAP,IAAc;AAC5B,aAAO,MAAM,KAAKN,IAAL,CAAUG,KAAV,CAAiB,IAAGG,EAAG,EAAvB,EAA0B;AACrCF,QAAAA,MAAM,EAAE;AAD6B,OAA1B,CAAb;AAGD,KAbiB;;AAAA,SAelBG,SAfkB,GAeN,OAAO;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,IAAR;AAAcP,MAAAA;AAAd,KAAP,KAAoC;AAC9C,aAAO,MAAM,KAAKF,IAAL,CAAUG,KAAV,CAAgBN,GAAhB,EAAqB;AAChCO,QAAAA,MAAM,EAAE,MADwB;AAEhCM,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEJ,UAAAA,IAAF;AAAQC,UAAAA,IAAR;AAAcP,UAAAA;AAAd,SAAf;AAF0B,OAArB,CAAb;AAID,KApBiB;;AAAA,SAsBlBW,WAtBkB,GAsBJ,MAAOP,EAAP,IAAc;AAC1B,aAAO,MAAM,KAAKN,IAAL,CAAUG,KAAV,CAAiB,IAAGG,EAAG,EAAvB,EAA0B;AACrCF,QAAAA,MAAM,EAAE;AAD6B,OAA1B,CAAb;AAGD,KA1BiB;;AAAA,SA4BlBU,WA5BkB,GA4BJ,OAAO;AAAER,MAAAA,EAAF;AAAME,MAAAA;AAAN,KAAP,KAAwB;AACpC,aAAO,MAAM,KAAKR,IAAL,CAAUG,KAAV,CAAiB,GAAEN,GAAI,IAAGS,EAAG,EAA7B,EAAgC;AAC3CF,QAAAA,MAAM,EAAE,KADmC;AAE3CM,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBJ,UAAAA;AADmB,SAAf;AAFqC,OAAhC,CAAb;AAMD,KAnCiB;;AAChB,SAAKR,IAAL,GAAYA,IAAZ;AACD;;AAH+B","sourcesContent":["const url = \"http://localhost:8080/tweets\";\n\nexport default class TweetService {\n  constructor(http) {\n    this.http = http;\n  }\n  getTweets = async (username = \"\") => {\n    return await this.http.fetch(`?username=${username}`, {\n      method: \"GET\",\n    });\n  };\n\n  getTweetsById = async (id) => {\n    return await this.http.fetch(`/${id}`, {\n      method: \"GET\",\n    });\n  };\n\n  postTweet = async ({ text, name, username }) => {\n    return await this.http.fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({ text, name, username }),\n    });\n  };\n\n  deleteTweet = async (id) => {\n    return await this.http.fetch(`/${id}`, {\n      method: \"DELETE\",\n    });\n  };\n\n  updateTweet = async ({ id, text }) => {\n    return await this.http.fetch(`${url}/${id}`, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        text,\n      }),\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}