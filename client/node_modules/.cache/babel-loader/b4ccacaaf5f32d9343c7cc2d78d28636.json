{"ast":null,"code":"export default class UserService {\n  constructor(http) {\n    this.loginUser = async (username, password) => {\n      return await this.http.fetch(`/auth/login`, {\n        method: \"POST\",\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n    };\n\n    this.createUser = async ({\n      username,\n      password,\n      name,\n      email,\n      url\n    }) => {\n      return await this.http.fetch(`/auth/signup`, {\n        method: \"POST\",\n        body: JSON.stringify({\n          username,\n          password,\n          name,\n          email,\n          url\n        })\n      });\n    };\n\n    this.http = http;\n  }\n\n}","map":{"version":3,"sources":["/Users/keehoonjung/projects/react/dwitter/client/src/api/user.js"],"names":["UserService","constructor","http","loginUser","username","password","fetch","method","body","JSON","stringify","createUser","name","email","url"],"mappings":"AAAA,eAAe,MAAMA,WAAN,CAAkB;AAC/BC,EAAAA,WAAW,CAACC,IAAD,EAAO;AAAA,SAIlBC,SAJkB,GAIN,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACxC,aAAO,MAAM,KAAKH,IAAL,CAAUI,KAAV,CAAiB,aAAjB,EAA+B;AAC1CC,QAAAA,MAAM,EAAE,MADkC;AAE1CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBN,UAAAA,QADmB;AAEnBC,UAAAA;AAFmB,SAAf;AAFoC,OAA/B,CAAb;AAOD,KAZiB;;AAAA,SAclBM,UAdkB,GAcL,OAAO;AAAEP,MAAAA,QAAF;AAAYC,MAAAA,QAAZ;AAAsBO,MAAAA,IAAtB;AAA4BC,MAAAA,KAA5B;AAAmCC,MAAAA;AAAnC,KAAP,KAAoD;AAC/D,aAAO,MAAM,KAAKZ,IAAL,CAAUI,KAAV,CAAiB,cAAjB,EAAgC;AAC3CC,QAAAA,MAAM,EAAE,MADmC;AAE3CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBN,UAAAA,QADmB;AAEnBC,UAAAA,QAFmB;AAGnBO,UAAAA,IAHmB;AAInBC,UAAAA,KAJmB;AAKnBC,UAAAA;AALmB,SAAf;AAFqC,OAAhC,CAAb;AAUD,KAzBiB;;AAChB,SAAKZ,IAAL,GAAYA,IAAZ;AACD;;AAH8B","sourcesContent":["export default class UserService {\n  constructor(http) {\n    this.http = http;\n  }\n\n  loginUser = async (username, password) => {\n    return await this.http.fetch(`/auth/login`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        username,\n        password,\n      }),\n    });\n  };\n\n  createUser = async ({ username, password, name, email, url }) => {\n    return await this.http.fetch(`/auth/signup`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        username,\n        password,\n        name,\n        email,\n        url,\n      }),\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}