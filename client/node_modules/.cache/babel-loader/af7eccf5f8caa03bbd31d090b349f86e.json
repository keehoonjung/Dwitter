{"ast":null,"code":"const url = \"http://localhost:8080/tweets\";\nexport const getTweets = async (username = \"\") => {\n  const response = await fetch(`${url}?username=${username}`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const data = await response.json();\n\n  if (response.status !== 200) {\n    throw new Error(data.message);\n  }\n\n  return data;\n};\nexport const getTweetsById = async id => {\n  const tweet = await fetch(`${url}/${id}`) //\n  .then(res => res.json()).then(res => res);\n  return tweet;\n};\nexport const postTweet = async ({\n  text,\n  name,\n  username\n}) => {\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      text,\n      name,\n      username\n    })\n  });\n  const data = await response.json();\n\n  if (response.status !== 201) {\n    throw new Error(data.message);\n  }\n\n  return data;\n};\nexport const deleteTweet = async id => {\n  await fetch(`${url}/${id}`, {\n    method: \"delete\"\n  }); //\n};\nexport const updateTweet = async ({\n  id,\n  text\n}) => {\n  const tweet = await fetch(`${url}/${id}`, {\n    method: \"put\",\n    body: JSON.stringify({\n      text\n    })\n  }) //\n  .then(res => res.json()).then(res => res);\n  return tweet;\n};","map":{"version":3,"sources":["/Users/keehoonjung/projects/react/dwitter/client/src/api/tweets.js"],"names":["url","getTweets","username","response","fetch","method","headers","data","json","status","Error","message","getTweetsById","id","tweet","then","res","postTweet","text","name","body","JSON","stringify","deleteTweet","updateTweet"],"mappings":"AAAA,MAAMA,GAAG,GAAG,8BAAZ;AAEA,OAAO,MAAMC,SAAS,GAAG,OAAOC,QAAQ,GAAG,EAAlB,KAAyB;AAChD,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,GAAI,aAAYE,QAAS,EAA7B,EAAgC;AAC1DG,IAAAA,MAAM,EAAE,KADkD;AAE1DC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AAFiD,GAAhC,CAA5B;AAIA,QAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;;AACA,MAAIL,QAAQ,CAACM,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,UAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAf,CAAN;AACD;;AACD,SAAOJ,IAAP;AACD,CAVM;AAYP,OAAO,MAAMK,aAAa,GAAG,MAAOC,EAAP,IAAc;AACzC,QAAMC,KAAK,GAAG,MAAMV,KAAK,CAAE,GAAEJ,GAAI,IAAGa,EAAG,EAAd,CAAL,CAAsB;AAAtB,GACjBE,IADiB,CACXC,GAAD,IAASA,GAAG,CAACR,IAAJ,EADG,EAEjBO,IAFiB,CAEXC,GAAD,IAASA,GAFG,CAApB;AAGA,SAAOF,KAAP;AACD,CALM;AAOP,OAAO,MAAMG,SAAS,GAAG,OAAO;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcjB,EAAAA;AAAd,CAAP,KAAoC;AAC3D,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAD,EAAM;AAChCK,IAAAA,MAAM,EAAE,MADwB;AAEhCC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFuB;AAGhCc,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEJ,MAAAA,IAAF;AAAQC,MAAAA,IAAR;AAAcjB,MAAAA;AAAd,KAAf;AAH0B,GAAN,CAA5B;AAKA,QAAMK,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;;AACA,MAAIL,QAAQ,CAACM,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,UAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAf,CAAN;AACD;;AAED,SAAOJ,IAAP;AACD,CAZM;AAcP,OAAO,MAAMgB,WAAW,GAAG,MAAOV,EAAP,IAAc;AACvC,QAAMT,KAAK,CAAE,GAAEJ,GAAI,IAAGa,EAAG,EAAd,EAAiB;AAC1BR,IAAAA,MAAM,EAAE;AADkB,GAAjB,CAAX,CADuC,CAGnC;AACL,CAJM;AAMP,OAAO,MAAMmB,WAAW,GAAG,OAAO;AAAEX,EAAAA,EAAF;AAAMK,EAAAA;AAAN,CAAP,KAAwB;AACjD,QAAMJ,KAAK,GAAG,MAAMV,KAAK,CAAE,GAAEJ,GAAI,IAAGa,EAAG,EAAd,EAAiB;AACxCR,IAAAA,MAAM,EAAE,KADgC;AAExCe,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBJ,MAAAA;AADmB,KAAf;AAFkC,GAAjB,CAAL,CAKjB;AALiB,GAMjBH,IANiB,CAMXC,GAAD,IAASA,GAAG,CAACR,IAAJ,EANG,EAOjBO,IAPiB,CAOXC,GAAD,IAASA,GAPG,CAApB;AAQA,SAAOF,KAAP;AACD,CAVM","sourcesContent":["const url = \"http://localhost:8080/tweets\";\n\nexport const getTweets = async (username = \"\") => {\n  const response = await fetch(`${url}?username=${username}`, {\n    method: \"GET\",\n    headers: { \"Content-Type\": \"application/json\" },\n  });\n  const data = await response.json();\n  if (response.status !== 200) {\n    throw new Error(data.message);\n  }\n  return data;\n};\n\nexport const getTweetsById = async (id) => {\n  const tweet = await fetch(`${url}/${id}`) //\n    .then((res) => res.json())\n    .then((res) => res);\n  return tweet;\n};\n\nexport const postTweet = async ({ text, name, username }) => {\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ text, name, username }),\n  });\n  const data = await response.json();\n  if (response.status !== 201) {\n    throw new Error(data.message);\n  }\n\n  return data;\n};\n\nexport const deleteTweet = async (id) => {\n  await fetch(`${url}/${id}`, {\n    method: \"delete\",\n  }); //\n};\n\nexport const updateTweet = async ({ id, text }) => {\n  const tweet = await fetch(`${url}/${id}`, {\n    method: \"put\",\n    body: JSON.stringify({\n      text,\n    }),\n  }) //\n    .then((res) => res.json())\n    .then((res) => res);\n  return tweet;\n};\n"]},"metadata":{},"sourceType":"module"}