{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst userData = {\n  JK: {\n    name: \"JK\",\n    useranme: \"JK\",\n    url: \"https://res.cloudinary.com/dpvhkp8oq/image/upload/v1632646994/Motion/moxvxyhmceuumjye3lth.jpg\"\n  },\n  song: {\n    name: \"songsong\",\n    useranme: \"song\",\n    url: \"https://res.cloudinary.com/dpvhkp8oq/image/upload/v1632646994/Motion/moxvxyhmceuumjye3lth.jpg\"\n  }\n};\nconst tweetData = {};\nconst tweetsSlice = createSlice({\n  name: \"Tweets\",\n  initialState: {\n    user: userData,\n    data: tweetData\n  },\n  reducers: {\n    postTweet: (state, action) => {\n      const tweet = action.payload;\n      state.data[tweet.id] = tweet;\n    },\n    deleteTweet: (state, action) => {\n      delete state.data[action.payload];\n    },\n    getTweets: (state, action) => {\n      const newData = { ...state.data\n      };\n      const keys = Object.keys(newData).filter(key => {\n        return newData[key].useranme === action.payload;\n      });\n      const newState = {};\n      keys.forEach(key => {\n        newState[key] = newData[key];\n      });\n      return newState;\n    }\n  }\n});\nconst dataStore = configureStore({\n  reducer: tweetsSlice.reducer\n});\nexport const {\n  postTweet,\n  deleteTweet,\n  getTweets\n} = tweetsSlice.actions;\nexport default dataStore;","map":{"version":3,"sources":["/Users/keehoonjung/projects/react/dwitter/client/src/service/store.tsx"],"names":["configureStore","createSlice","userData","JK","name","useranme","url","song","tweetData","tweetsSlice","initialState","user","data","reducers","postTweet","state","action","tweet","payload","id","deleteTweet","getTweets","newData","keys","Object","filter","key","newState","forEach","dataStore","reducer","actions"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,kBAA5C;AAqCA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,EAAE,EAAE;AACFC,IAAAA,IAAI,EAAE,IADJ;AAEFC,IAAAA,QAAQ,EAAE,IAFR;AAGFC,IAAAA,GAAG,EAAE;AAHH,GADW;AAMfC,EAAAA,IAAI,EAAE;AACJH,IAAAA,IAAI,EAAE,UADF;AAEJC,IAAAA,QAAQ,EAAE,MAFN;AAGJC,IAAAA,GAAG,EAAE;AAHD;AANS,CAAjB;AAaA,MAAME,SAAS,GAAG,EAAlB;AAEA,MAAMC,WAAW,GAAGR,WAAW,CAAC;AAC9BG,EAAAA,IAAI,EAAE,QADwB;AAE9BM,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAAET,QADM;AAEZU,IAAAA,IAAI,EAAEJ;AAFM,GAFgB;AAM9BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAqBC,MAArB,KAAiD;AAC1D,YAAMC,KAAK,GAAGD,MAAM,CAACE,OAArB;AACAH,MAAAA,KAAK,CAACH,IAAN,CAAWK,KAAK,CAACE,EAAjB,IAAuBF,KAAvB;AACD,KAJO;AAKRG,IAAAA,WAAW,EAAE,CAACL,KAAD,EAAqBC,MAArB,KAAmD;AAC9D,aAAOD,KAAK,CAACH,IAAN,CAAWI,MAAM,CAACE,OAAlB,CAAP;AACD,KAPO;AAQRG,IAAAA,SAAS,EAAE,CAACN,KAAD,EAAqBC,MAArB,KAAgD;AACzD,YAAMM,OAAO,GAAG,EAAE,GAAGP,KAAK,CAACH;AAAX,OAAhB;AACA,YAAMW,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYD,OAAZ,EAAqBG,MAArB,CAA6BC,GAAD,IAAS;AAChD,eAAOJ,OAAO,CAACI,GAAD,CAAP,CAAarB,QAAb,KAA0BW,MAAM,CAACE,OAAxC;AACD,OAFY,CAAb;AAGA,YAAMS,QAA0C,GAAG,EAAnD;AACAJ,MAAAA,IAAI,CAACK,OAAL,CAAcF,GAAD,IAAS;AACpBC,QAAAA,QAAQ,CAACD,GAAD,CAAR,GAAgBJ,OAAO,CAACI,GAAD,CAAvB;AACD,OAFD;AAGA,aAAOC,QAAP;AACD;AAlBO;AANoB,CAAD,CAA/B;AA4BA,MAAME,SAAS,GAAG7B,cAAc,CAAC;AAAE8B,EAAAA,OAAO,EAAErB,WAAW,CAACqB;AAAvB,CAAD,CAAhC;AAEA,OAAO,MAAM;AAAEhB,EAAAA,SAAF;AAAaM,EAAAA,WAAb;AAA0BC,EAAAA;AAA1B,IAAwCZ,WAAW,CAACsB,OAA1D;AAEP,eAAeF,SAAf","sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\n\nexport type TweetType = {\n  id: string;\n  text: string;\n  createdAt: Date;\n  name: string;\n  useranme: string;\n  url: string;\n};\n\nexport type UserType = {\n  name: string;\n  useranme: string;\n  url: string;\n};\n\nexport type TweetsState = {\n  user: { [username: string]: UserType };\n  data: { [tweetId: string]: TweetType };\n};\n\ntype postTweetAction = {\n  type: string;\n  payload: TweetType;\n};\n\ntype deleteTweetAction = {\n  type: string;\n  payload: string;\n};\n\ntype getTweetAction = {\n  type: string;\n  payload: string;\n};\n\nconst userData = {\n  JK: {\n    name: \"JK\",\n    useranme: \"JK\",\n    url: \"https://res.cloudinary.com/dpvhkp8oq/image/upload/v1632646994/Motion/moxvxyhmceuumjye3lth.jpg\",\n  },\n  song: {\n    name: \"songsong\",\n    useranme: \"song\",\n    url: \"https://res.cloudinary.com/dpvhkp8oq/image/upload/v1632646994/Motion/moxvxyhmceuumjye3lth.jpg\",\n  },\n};\n\nconst tweetData = {};\n\nconst tweetsSlice = createSlice({\n  name: \"Tweets\",\n  initialState: {\n    user: userData,\n    data: tweetData,\n  },\n  reducers: {\n    postTweet: (state: TweetsState, action: postTweetAction) => {\n      const tweet = action.payload;\n      state.data[tweet.id] = tweet;\n    },\n    deleteTweet: (state: TweetsState, action: deleteTweetAction) => {\n      delete state.data[action.payload];\n    },\n    getTweets: (state: TweetsState, action: getTweetAction) => {\n      const newData = { ...state.data };\n      const keys = Object.keys(newData).filter((key) => {\n        return newData[key].useranme === action.payload;\n      });\n      const newState: { [tweetId: string]: TweetType } = {};\n      keys.forEach((key) => {\n        newState[key] = newData[key];\n      });\n      return newState;\n    },\n  },\n});\n\nconst dataStore = configureStore({ reducer: tweetsSlice.reducer });\n\nexport const { postTweet, deleteTweet, getTweets } = tweetsSlice.actions;\n\nexport default dataStore;\n"]},"metadata":{},"sourceType":"module"}