{"ast":null,"code":"import * as tweetsAPI from \"../api/tweets\";\nimport { tweetsPromiseThunk, tweetPromiseThunkById, handleAsyncDeleteActions, handleAsyncGetActions, handleAsyncPostActions, handleAsyncUpdateActions, tweetsReducerUtils } from \"../util/tweets_async_utils\";\nconst GET_TWEETS = \"GET_TWEETS\";\nconst GET_TWEETS_SUCCESS = \"GET_TWEETS_SUCCESS\";\nconst GET_TWEETS_ERROR = \"GET_TWEETS_ERROR\";\nconst GET_TWEET = \"GET_TWEET\";\nconst GET_TWEET_SUCCESS = \"GET_TWEET_SUCCESS\";\nconst GET_TWEET_ERROR = \"GET_TWEET_ERROR\";\nconst POST_TWEET = \"POST_TWEET\";\nconst POST_TWEET_SUCCESS = \"POST_TWEET_SUCCESS\";\nconst POST_TWEET_ERROR = \"POST_TWEET_ERROR\";\nconst DELETE_TWEET = \"DELETE_TWEET\";\nconst DELETE_TWEET_SUCCESS = \"DELETE_TWEET_SUCCESS\";\nconst DELETE_TWEET_ERROR = \"DELETE_TWEET_ERROR\";\nconst UPDATE_TWEET = \"UPDATE_TWEET\";\nconst UPDATE_TWEET_SUCCESS = \"UPDATE_TWEET_SUCCESS\";\nconst UPDATE_TWEET_ERROR = \"UPDATE_TWEET_ERROR\";\nexport const getTweets = tweetsPromiseThunk(GET_TWEETS, tweetsAPI.getTweets);\nexport const getTweet = tweetPromiseThunkById(GET_TWEET, tweetsAPI.getTweetsById);\nexport const postTweet = tweetsPromiseThunk(POST_TWEET, tweetsAPI.postTweet);\nexport const deleteTweet = tweetPromiseThunkById(DELETE_TWEET, tweetsAPI.deleteTweet);\nexport const updateTweet = tweetPromiseThunkById(UPDATE_TWEET, tweetsAPI.updateTweet, param => param.id);\nconst initialState = {\n  posts: tweetsReducerUtils.initial(),\n  post: tweetsReducerUtils.initial()\n};\nexport default function tweets(state = initialState, action) {\n  switch (action.type) {\n    case GET_TWEETS:\n    case GET_TWEETS_SUCCESS:\n    case GET_TWEETS_ERROR:\n      return handleAsyncGetActions(GET_TWEETS, \"posts\")(state, action);\n\n    case GET_TWEET:\n    case GET_TWEET_SUCCESS:\n    case GET_TWEET_ERROR:\n      return handleAsyncGetActions(GET_TWEET, \"posts\")(state, action);\n\n    case POST_TWEET:\n    case POST_TWEET_SUCCESS:\n    case POST_TWEET_ERROR:\n      return handleAsyncPostActions(POST_TWEET, \"posts\")(state, action);\n\n    case DELETE_TWEET:\n    case DELETE_TWEET_SUCCESS:\n    case DELETE_TWEET_ERROR:\n      return handleAsyncDeleteActions(DELETE_TWEET, \"delete\")(state, action);\n\n    case UPDATE_TWEET:\n    case UPDATE_TWEET_SUCCESS:\n    case UPDATE_TWEET_ERROR:\n      return handleAsyncUpdateActions(UPDATE_TWEET, \"update\")(state, action);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/keehoonjung/projects/react/dwitter/client/src/module/tweets.js"],"names":["tweetsAPI","tweetsPromiseThunk","tweetPromiseThunkById","handleAsyncDeleteActions","handleAsyncGetActions","handleAsyncPostActions","handleAsyncUpdateActions","tweetsReducerUtils","GET_TWEETS","GET_TWEETS_SUCCESS","GET_TWEETS_ERROR","GET_TWEET","GET_TWEET_SUCCESS","GET_TWEET_ERROR","POST_TWEET","POST_TWEET_SUCCESS","POST_TWEET_ERROR","DELETE_TWEET","DELETE_TWEET_SUCCESS","DELETE_TWEET_ERROR","UPDATE_TWEET","UPDATE_TWEET_SUCCESS","UPDATE_TWEET_ERROR","getTweets","getTweet","getTweetsById","postTweet","deleteTweet","updateTweet","param","id","initialState","posts","initial","post","tweets","state","action","type"],"mappings":"AAAA,OAAO,KAAKA,SAAZ,MAA2B,eAA3B;AACA,SACEC,kBADF,EAEEC,qBAFF,EAGEC,wBAHF,EAIEC,qBAJF,EAKEC,sBALF,EAMEC,wBANF,EAOEC,kBAPF,QAQO,4BARP;AAUA,MAAMC,UAAU,GAAG,YAAnB;AACA,MAAMC,kBAAkB,GAAG,oBAA3B;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AAEA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,eAAe,GAAG,iBAAxB;AAEA,MAAMC,UAAU,GAAG,YAAnB;AACA,MAAMC,kBAAkB,GAAG,oBAA3B;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AAEA,MAAMC,YAAY,GAAG,cAArB;AACA,MAAMC,oBAAoB,GAAG,sBAA7B;AACA,MAAMC,kBAAkB,GAAG,oBAA3B;AAEA,MAAMC,YAAY,GAAG,cAArB;AACA,MAAMC,oBAAoB,GAAG,sBAA7B;AACA,MAAMC,kBAAkB,GAAG,oBAA3B;AAEA,OAAO,MAAMC,SAAS,GAAGtB,kBAAkB,CAACO,UAAD,EAAaR,SAAS,CAACuB,SAAvB,CAApC;AACP,OAAO,MAAMC,QAAQ,GAAGtB,qBAAqB,CAC3CS,SAD2C,EAE3CX,SAAS,CAACyB,aAFiC,CAAtC;AAIP,OAAO,MAAMC,SAAS,GAAGzB,kBAAkB,CAACa,UAAD,EAAad,SAAS,CAAC0B,SAAvB,CAApC;AACP,OAAO,MAAMC,WAAW,GAAGzB,qBAAqB,CAC9Ce,YAD8C,EAE9CjB,SAAS,CAAC2B,WAFoC,CAAzC;AAIP,OAAO,MAAMC,WAAW,GAAG1B,qBAAqB,CAC9CkB,YAD8C,EAE9CpB,SAAS,CAAC4B,WAFoC,EAG7CC,KAAD,IAAWA,KAAK,CAACC,EAH6B,CAAzC;AAMP,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEzB,kBAAkB,CAAC0B,OAAnB,EADY;AAEnBC,EAAAA,IAAI,EAAE3B,kBAAkB,CAAC0B,OAAnB;AAFa,CAArB;AAKA,eAAe,SAASE,MAAT,CAAgBC,KAAK,GAAGL,YAAxB,EAAsCM,MAAtC,EAA8C;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK9B,UAAL;AACA,SAAKC,kBAAL;AACA,SAAKC,gBAAL;AACE,aAAON,qBAAqB,CAACI,UAAD,EAAa,OAAb,CAArB,CAA2C4B,KAA3C,EAAkDC,MAAlD,CAAP;;AACF,SAAK1B,SAAL;AACA,SAAKC,iBAAL;AACA,SAAKC,eAAL;AACE,aAAOT,qBAAqB,CAACO,SAAD,EAAY,OAAZ,CAArB,CAA0CyB,KAA1C,EAAiDC,MAAjD,CAAP;;AACF,SAAKvB,UAAL;AACA,SAAKC,kBAAL;AACA,SAAKC,gBAAL;AACE,aAAOX,sBAAsB,CAACS,UAAD,EAAa,OAAb,CAAtB,CAA4CsB,KAA5C,EAAmDC,MAAnD,CAAP;;AACF,SAAKpB,YAAL;AACA,SAAKC,oBAAL;AACA,SAAKC,kBAAL;AACE,aAAOhB,wBAAwB,CAACc,YAAD,EAAe,QAAf,CAAxB,CAAiDmB,KAAjD,EAAwDC,MAAxD,CAAP;;AACF,SAAKjB,YAAL;AACA,SAAKC,oBAAL;AACA,SAAKC,kBAAL;AACE,aAAOhB,wBAAwB,CAACc,YAAD,EAAe,QAAf,CAAxB,CAAiDgB,KAAjD,EAAwDC,MAAxD,CAAP;;AACF;AACE,aAAOD,KAAP;AAtBJ;AAwBD","sourcesContent":["import * as tweetsAPI from \"../api/tweets\";\nimport {\n  tweetsPromiseThunk,\n  tweetPromiseThunkById,\n  handleAsyncDeleteActions,\n  handleAsyncGetActions,\n  handleAsyncPostActions,\n  handleAsyncUpdateActions,\n  tweetsReducerUtils,\n} from \"../util/tweets_async_utils\";\n\nconst GET_TWEETS = \"GET_TWEETS\";\nconst GET_TWEETS_SUCCESS = \"GET_TWEETS_SUCCESS\";\nconst GET_TWEETS_ERROR = \"GET_TWEETS_ERROR\";\n\nconst GET_TWEET = \"GET_TWEET\";\nconst GET_TWEET_SUCCESS = \"GET_TWEET_SUCCESS\";\nconst GET_TWEET_ERROR = \"GET_TWEET_ERROR\";\n\nconst POST_TWEET = \"POST_TWEET\";\nconst POST_TWEET_SUCCESS = \"POST_TWEET_SUCCESS\";\nconst POST_TWEET_ERROR = \"POST_TWEET_ERROR\";\n\nconst DELETE_TWEET = \"DELETE_TWEET\";\nconst DELETE_TWEET_SUCCESS = \"DELETE_TWEET_SUCCESS\";\nconst DELETE_TWEET_ERROR = \"DELETE_TWEET_ERROR\";\n\nconst UPDATE_TWEET = \"UPDATE_TWEET\";\nconst UPDATE_TWEET_SUCCESS = \"UPDATE_TWEET_SUCCESS\";\nconst UPDATE_TWEET_ERROR = \"UPDATE_TWEET_ERROR\";\n\nexport const getTweets = tweetsPromiseThunk(GET_TWEETS, tweetsAPI.getTweets);\nexport const getTweet = tweetPromiseThunkById(\n  GET_TWEET,\n  tweetsAPI.getTweetsById\n);\nexport const postTweet = tweetsPromiseThunk(POST_TWEET, tweetsAPI.postTweet);\nexport const deleteTweet = tweetPromiseThunkById(\n  DELETE_TWEET,\n  tweetsAPI.deleteTweet\n);\nexport const updateTweet = tweetPromiseThunkById(\n  UPDATE_TWEET,\n  tweetsAPI.updateTweet,\n  (param) => param.id\n);\n\nconst initialState = {\n  posts: tweetsReducerUtils.initial(),\n  post: tweetsReducerUtils.initial(),\n};\n\nexport default function tweets(state = initialState, action) {\n  switch (action.type) {\n    case GET_TWEETS:\n    case GET_TWEETS_SUCCESS:\n    case GET_TWEETS_ERROR:\n      return handleAsyncGetActions(GET_TWEETS, \"posts\")(state, action);\n    case GET_TWEET:\n    case GET_TWEET_SUCCESS:\n    case GET_TWEET_ERROR:\n      return handleAsyncGetActions(GET_TWEET, \"posts\")(state, action);\n    case POST_TWEET:\n    case POST_TWEET_SUCCESS:\n    case POST_TWEET_ERROR:\n      return handleAsyncPostActions(POST_TWEET, \"posts\")(state, action);\n    case DELETE_TWEET:\n    case DELETE_TWEET_SUCCESS:\n    case DELETE_TWEET_ERROR:\n      return handleAsyncDeleteActions(DELETE_TWEET, \"delete\")(state, action);\n    case UPDATE_TWEET:\n    case UPDATE_TWEET_SUCCESS:\n    case UPDATE_TWEET_ERROR:\n      return handleAsyncUpdateActions(UPDATE_TWEET, \"update\")(state, action);\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}