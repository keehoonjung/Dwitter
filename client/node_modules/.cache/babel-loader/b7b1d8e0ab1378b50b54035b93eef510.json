{"ast":null,"code":"export const createPromiseThunk = (type, promiseCreator) => {\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n  return param => async dispatch => {\n    dispatch({\n      type\n    });\n\n    try {\n      const payload = await promiseCreator(param);\n      dispatch({\n        type: SUCCESS,\n        payload\n      });\n    } catch (e) {\n      dispatch({\n        type: ERROR,\n        payload: e,\n        error: true\n      });\n    }\n  };\n};\n\nconst defaultIdSelector = param => param;\n\nexport const createPromiseThunkById = (type, promiseCreator, idSelector = defaultIdSelector) => {\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n  return param => async dispatch => {\n    const id = idSelector(param);\n    dispatch({\n      type,\n      meta: id\n    });\n\n    try {\n      const payload = await promiseCreator(param);\n      dispatch({\n        type: SUCCESS,\n        payload,\n        meta: id\n      });\n    } catch (e) {\n      dispatch({\n        type: ERROR,\n        error: true,\n        payload: e,\n        meta: id\n      });\n    }\n  };\n};\nexport const reducerUtils = {\n  initial: (initialData = null) => ({\n    loading: false,\n    data: null,\n    error: null\n  }),\n  loading: (prevState = null) => ({\n    loading: true,\n    data: prevState,\n    error: null\n  }),\n  success: payload => ({\n    loading: false,\n    data: payload,\n    error: null\n  }),\n  error: error => ({\n    loading: false,\n    data: null,\n    error: error\n  })\n};\nexport const handleAsyncActions = callback => {\n  return (type, key) => {\n    const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n    return (state, action) => {\n      switch (action.type) {\n        case type:\n          return { ...state,\n            [key]: reducerUtils.loading()\n          };\n\n        case SUCCESS:\n          return callback(key, state, action);\n\n        case ERROR:\n          return { ...state,\n            [key]: reducerUtils.error(action.payload)\n          };\n\n        default:\n          return state;\n      }\n    };\n  };\n};\n\nconst getAsyncActionCallback = (key, state, action) => ({ ...state,\n  [key]: reducerUtils.success(action.payload)\n});\n\nconst postAsyncActionCallback = (key, state, action) => {\n  const result = action.payload;\n  return { ...state,\n    [key]: {\n      loading: false,\n      data: result ? [result, ...state[key].data] : state.posts.data,\n      error: null\n    }\n  };\n};\n\nexport const handleAsyncGetActions = handleAsyncActions(getAsyncActionCallback);\nexport const handleAsyncPostActions = handleAsyncActions(postAsyncActionCallback);\nexport const handleAsyncDeleteActions = (type, key) => {\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n  return (state, action) => {\n    switch (action.type) {\n      case type:\n        return { ...state,\n          [key]: reducerUtils.loading()\n        };\n\n      case SUCCESS:\n        return { ...state,\n          posts: { ...state.posts,\n            data: state.posts.data ? state.posts.data.filter(tweet => tweet.id !== action.meta) : null\n          }\n        };\n\n      case ERROR:\n        return { ...state,\n          [key]: reducerUtils.error(action.payload)\n        };\n\n      default:\n        return state;\n    }\n  };\n};\nexport const handleAsyncUpdateActions = (type, key) => {\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n  return (state, action) => {\n    switch (action.type) {\n      case type:\n        return { ...state,\n          [key]: reducerUtils.loading()\n        };\n\n      case SUCCESS:\n        return { ...state,\n          posts: { ...state.posts,\n            data: state.posts.data ? state.posts.data.map(tweet => {\n              if (tweet.id !== action.meta) {\n                return tweet;\n              }\n\n              return action.payload;\n            }) : null\n          }\n        };\n\n      case ERROR:\n        return { ...state,\n          [key]: reducerUtils.error(action.payload)\n        };\n\n      default:\n        return state;\n    }\n  };\n};","map":{"version":3,"sources":["/Users/keehoonjung/projects/react/dwitter/client/src/util/async_utils.js"],"names":["createPromiseThunk","type","promiseCreator","SUCCESS","ERROR","param","dispatch","payload","e","error","defaultIdSelector","createPromiseThunkById","idSelector","id","meta","reducerUtils","initial","initialData","loading","data","prevState","success","handleAsyncActions","callback","key","state","action","getAsyncActionCallback","postAsyncActionCallback","result","posts","handleAsyncGetActions","handleAsyncPostActions","handleAsyncDeleteActions","filter","tweet","handleAsyncUpdateActions","map"],"mappings":"AAAA,OAAO,MAAMA,kBAAkB,GAAG,CAACC,IAAD,EAAOC,cAAP,KAA0B;AAC1D,QAAM,CAACC,OAAD,EAAUC,KAAV,IAAmB,CAAE,GAAEH,IAAK,UAAT,EAAqB,GAAEA,IAAK,QAA5B,CAAzB;AAEA,SAAQI,KAAD,IAAW,MAAOC,QAAP,IAAoB;AACpCA,IAAAA,QAAQ,CAAC;AAAEL,MAAAA;AAAF,KAAD,CAAR;;AACA,QAAI;AACF,YAAMM,OAAO,GAAG,MAAML,cAAc,CAACG,KAAD,CAApC;AACAC,MAAAA,QAAQ,CAAC;AAAEL,QAAAA,IAAI,EAAEE,OAAR;AAAiBI,QAAAA;AAAjB,OAAD,CAAR;AACD,KAHD,CAGE,OAAOC,CAAP,EAAU;AACVF,MAAAA,QAAQ,CAAC;AAAEL,QAAAA,IAAI,EAAEG,KAAR;AAAeG,QAAAA,OAAO,EAAEC,CAAxB;AAA2BC,QAAAA,KAAK,EAAE;AAAlC,OAAD,CAAR;AACD;AACF,GARD;AASD,CAZM;;AAcP,MAAMC,iBAAiB,GAAIL,KAAD,IAAWA,KAArC;;AACA,OAAO,MAAMM,sBAAsB,GAAG,CACpCV,IADoC,EAEpCC,cAFoC,EAGpCU,UAAU,GAAGF,iBAHuB,KAIjC;AACH,QAAM,CAACP,OAAD,EAAUC,KAAV,IAAmB,CAAE,GAAEH,IAAK,UAAT,EAAqB,GAAEA,IAAK,QAA5B,CAAzB;AAEA,SAAQI,KAAD,IAAW,MAAOC,QAAP,IAAoB;AACpC,UAAMO,EAAE,GAAGD,UAAU,CAACP,KAAD,CAArB;AACAC,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAF;AAAQa,MAAAA,IAAI,EAAED;AAAd,KAAD,CAAR;;AACA,QAAI;AACF,YAAMN,OAAO,GAAG,MAAML,cAAc,CAACG,KAAD,CAApC;AACAC,MAAAA,QAAQ,CAAC;AAAEL,QAAAA,IAAI,EAAEE,OAAR;AAAiBI,QAAAA,OAAjB;AAA0BO,QAAAA,IAAI,EAAED;AAAhC,OAAD,CAAR;AACD,KAHD,CAGE,OAAOL,CAAP,EAAU;AACVF,MAAAA,QAAQ,CAAC;AAAEL,QAAAA,IAAI,EAAEG,KAAR;AAAeK,QAAAA,KAAK,EAAE,IAAtB;AAA4BF,QAAAA,OAAO,EAAEC,CAArC;AAAwCM,QAAAA,IAAI,EAAED;AAA9C,OAAD,CAAR;AACD;AACF,GATD;AAUD,CAjBM;AAmBP,OAAO,MAAME,YAAY,GAAG;AAC1BC,EAAAA,OAAO,EAAE,CAACC,WAAW,GAAG,IAAf,MAAyB;AAChCC,IAAAA,OAAO,EAAE,KADuB;AAEhCC,IAAAA,IAAI,EAAE,IAF0B;AAGhCV,IAAAA,KAAK,EAAE;AAHyB,GAAzB,CADiB;AAM1BS,EAAAA,OAAO,EAAE,CAACE,SAAS,GAAG,IAAb,MAAuB;AAC9BF,IAAAA,OAAO,EAAE,IADqB;AAE9BC,IAAAA,IAAI,EAAEC,SAFwB;AAG9BX,IAAAA,KAAK,EAAE;AAHuB,GAAvB,CANiB;AAW1BY,EAAAA,OAAO,EAAGd,OAAD,KAAc;AACrBW,IAAAA,OAAO,EAAE,KADY;AAErBC,IAAAA,IAAI,EAAEZ,OAFe;AAGrBE,IAAAA,KAAK,EAAE;AAHc,GAAd,CAXiB;AAgB1BA,EAAAA,KAAK,EAAGA,KAAD,KAAY;AACjBS,IAAAA,OAAO,EAAE,KADQ;AAEjBC,IAAAA,IAAI,EAAE,IAFW;AAGjBV,IAAAA,KAAK,EAAEA;AAHU,GAAZ;AAhBmB,CAArB;AAuBP,OAAO,MAAMa,kBAAkB,GAAIC,QAAD,IAAc;AAC9C,SAAO,CAACtB,IAAD,EAAOuB,GAAP,KAAe;AACpB,UAAM,CAACrB,OAAD,EAAUC,KAAV,IAAmB,CAAE,GAAEH,IAAK,UAAT,EAAqB,GAAEA,IAAK,QAA5B,CAAzB;AACA,WAAO,CAACwB,KAAD,EAAQC,MAAR,KAAmB;AACxB,cAAQA,MAAM,CAACzB,IAAf;AACE,aAAKA,IAAL;AACE,iBAAO,EACL,GAAGwB,KADE;AAEL,aAACD,GAAD,GAAOT,YAAY,CAACG,OAAb;AAFF,WAAP;;AAIF,aAAKf,OAAL;AACE,iBAAOoB,QAAQ,CAACC,GAAD,EAAMC,KAAN,EAAaC,MAAb,CAAf;;AACF,aAAKtB,KAAL;AACE,iBAAO,EACL,GAAGqB,KADE;AAEL,aAACD,GAAD,GAAOT,YAAY,CAACN,KAAb,CAAmBiB,MAAM,CAACnB,OAA1B;AAFF,WAAP;;AAIF;AACE,iBAAOkB,KAAP;AAdJ;AAgBD,KAjBD;AAkBD,GApBD;AAqBD,CAtBM;;AAwBP,MAAME,sBAAsB,GAAG,CAACH,GAAD,EAAMC,KAAN,EAAaC,MAAb,MAAyB,EACtD,GAAGD,KADmD;AAEtD,GAACD,GAAD,GAAOT,YAAY,CAACM,OAAb,CAAqBK,MAAM,CAACnB,OAA5B;AAF+C,CAAzB,CAA/B;;AAKA,MAAMqB,uBAAuB,GAAG,CAACJ,GAAD,EAAMC,KAAN,EAAaC,MAAb,KAAwB;AACtD,QAAMG,MAAM,GAAGH,MAAM,CAACnB,OAAtB;AACA,SAAO,EACL,GAAGkB,KADE;AAEL,KAACD,GAAD,GAAO;AACLN,MAAAA,OAAO,EAAE,KADJ;AAELC,MAAAA,IAAI,EAAEU,MAAM,GAAG,CAACA,MAAD,EAAS,GAAGJ,KAAK,CAACD,GAAD,CAAL,CAAWL,IAAvB,CAAH,GAAkCM,KAAK,CAACK,KAAN,CAAYX,IAFrD;AAGLV,MAAAA,KAAK,EAAE;AAHF;AAFF,GAAP;AAQD,CAVD;;AAYA,OAAO,MAAMsB,qBAAqB,GAAGT,kBAAkB,CAACK,sBAAD,CAAhD;AACP,OAAO,MAAMK,sBAAsB,GAAGV,kBAAkB,CACtDM,uBADsD,CAAjD;AAIP,OAAO,MAAMK,wBAAwB,GAAG,CAAChC,IAAD,EAAOuB,GAAP,KAAe;AACrD,QAAM,CAACrB,OAAD,EAAUC,KAAV,IAAmB,CAAE,GAAEH,IAAK,UAAT,EAAqB,GAAEA,IAAK,QAA5B,CAAzB;AACA,SAAO,CAACwB,KAAD,EAAQC,MAAR,KAAmB;AACxB,YAAQA,MAAM,CAACzB,IAAf;AACE,WAAKA,IAAL;AACE,eAAO,EACL,GAAGwB,KADE;AAEL,WAACD,GAAD,GAAOT,YAAY,CAACG,OAAb;AAFF,SAAP;;AAIF,WAAKf,OAAL;AACE,eAAO,EACL,GAAGsB,KADE;AAELK,UAAAA,KAAK,EAAE,EACL,GAAGL,KAAK,CAACK,KADJ;AAELX,YAAAA,IAAI,EAAEM,KAAK,CAACK,KAAN,CAAYX,IAAZ,GACFM,KAAK,CAACK,KAAN,CAAYX,IAAZ,CAAiBe,MAAjB,CAAyBC,KAAD,IAAWA,KAAK,CAACtB,EAAN,KAAaa,MAAM,CAACZ,IAAvD,CADE,GAEF;AAJC;AAFF,SAAP;;AASF,WAAKV,KAAL;AACE,eAAO,EACL,GAAGqB,KADE;AAEL,WAACD,GAAD,GAAOT,YAAY,CAACN,KAAb,CAAmBiB,MAAM,CAACnB,OAA1B;AAFF,SAAP;;AAIF;AACE,eAAOkB,KAAP;AAtBJ;AAwBD,GAzBD;AA0BD,CA5BM;AA8BP,OAAO,MAAMW,wBAAwB,GAAG,CAACnC,IAAD,EAAOuB,GAAP,KAAe;AACrD,QAAM,CAACrB,OAAD,EAAUC,KAAV,IAAmB,CAAE,GAAEH,IAAK,UAAT,EAAqB,GAAEA,IAAK,QAA5B,CAAzB;AACA,SAAO,CAACwB,KAAD,EAAQC,MAAR,KAAmB;AACxB,YAAQA,MAAM,CAACzB,IAAf;AACE,WAAKA,IAAL;AACE,eAAO,EACL,GAAGwB,KADE;AAEL,WAACD,GAAD,GAAOT,YAAY,CAACG,OAAb;AAFF,SAAP;;AAIF,WAAKf,OAAL;AACE,eAAO,EACL,GAAGsB,KADE;AAELK,UAAAA,KAAK,EAAE,EACL,GAAGL,KAAK,CAACK,KADJ;AAELX,YAAAA,IAAI,EAAEM,KAAK,CAACK,KAAN,CAAYX,IAAZ,GACFM,KAAK,CAACK,KAAN,CAAYX,IAAZ,CAAiBkB,GAAjB,CAAsBF,KAAD,IAAW;AAC9B,kBAAIA,KAAK,CAACtB,EAAN,KAAaa,MAAM,CAACZ,IAAxB,EAA8B;AAC5B,uBAAOqB,KAAP;AACD;;AACD,qBAAOT,MAAM,CAACnB,OAAd;AACD,aALD,CADE,GAOF;AATC;AAFF,SAAP;;AAcF,WAAKH,KAAL;AACE,eAAO,EACL,GAAGqB,KADE;AAEL,WAACD,GAAD,GAAOT,YAAY,CAACN,KAAb,CAAmBiB,MAAM,CAACnB,OAA1B;AAFF,SAAP;;AAIF;AACE,eAAOkB,KAAP;AA3BJ;AA6BD,GA9BD;AA+BD,CAjCM","sourcesContent":["export const createPromiseThunk = (type, promiseCreator) => {\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n\n  return (param) => async (dispatch) => {\n    dispatch({ type });\n    try {\n      const payload = await promiseCreator(param);\n      dispatch({ type: SUCCESS, payload });\n    } catch (e) {\n      dispatch({ type: ERROR, payload: e, error: true });\n    }\n  };\n};\n\nconst defaultIdSelector = (param) => param;\nexport const createPromiseThunkById = (\n  type,\n  promiseCreator,\n  idSelector = defaultIdSelector\n) => {\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n\n  return (param) => async (dispatch) => {\n    const id = idSelector(param);\n    dispatch({ type, meta: id });\n    try {\n      const payload = await promiseCreator(param);\n      dispatch({ type: SUCCESS, payload, meta: id });\n    } catch (e) {\n      dispatch({ type: ERROR, error: true, payload: e, meta: id });\n    }\n  };\n};\n\nexport const reducerUtils = {\n  initial: (initialData = null) => ({\n    loading: false,\n    data: null,\n    error: null,\n  }),\n  loading: (prevState = null) => ({\n    loading: true,\n    data: prevState,\n    error: null,\n  }),\n  success: (payload) => ({\n    loading: false,\n    data: payload,\n    error: null,\n  }),\n  error: (error) => ({\n    loading: false,\n    data: null,\n    error: error,\n  }),\n};\n\nexport const handleAsyncActions = (callback) => {\n  return (type, key) => {\n    const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n    return (state, action) => {\n      switch (action.type) {\n        case type:\n          return {\n            ...state,\n            [key]: reducerUtils.loading(),\n          };\n        case SUCCESS:\n          return callback(key, state, action);\n        case ERROR:\n          return {\n            ...state,\n            [key]: reducerUtils.error(action.payload),\n          };\n        default:\n          return state;\n      }\n    };\n  };\n};\n\nconst getAsyncActionCallback = (key, state, action) => ({\n  ...state,\n  [key]: reducerUtils.success(action.payload),\n});\n\nconst postAsyncActionCallback = (key, state, action) => {\n  const result = action.payload;\n  return {\n    ...state,\n    [key]: {\n      loading: false,\n      data: result ? [result, ...state[key].data] : state.posts.data,\n      error: null,\n    },\n  };\n};\n\nexport const handleAsyncGetActions = handleAsyncActions(getAsyncActionCallback);\nexport const handleAsyncPostActions = handleAsyncActions(\n  postAsyncActionCallback\n);\n\nexport const handleAsyncDeleteActions = (type, key) => {\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n  return (state, action) => {\n    switch (action.type) {\n      case type:\n        return {\n          ...state,\n          [key]: reducerUtils.loading(),\n        };\n      case SUCCESS:\n        return {\n          ...state,\n          posts: {\n            ...state.posts,\n            data: state.posts.data\n              ? state.posts.data.filter((tweet) => tweet.id !== action.meta)\n              : null,\n          },\n        };\n      case ERROR:\n        return {\n          ...state,\n          [key]: reducerUtils.error(action.payload),\n        };\n      default:\n        return state;\n    }\n  };\n};\n\nexport const handleAsyncUpdateActions = (type, key) => {\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n  return (state, action) => {\n    switch (action.type) {\n      case type:\n        return {\n          ...state,\n          [key]: reducerUtils.loading(),\n        };\n      case SUCCESS:\n        return {\n          ...state,\n          posts: {\n            ...state.posts,\n            data: state.posts.data\n              ? state.posts.data.map((tweet) => {\n                  if (tweet.id !== action.meta) {\n                    return tweet;\n                  }\n                  return action.payload;\n                })\n              : null,\n          },\n        };\n      case ERROR:\n        return {\n          ...state,\n          [key]: reducerUtils.error(action.payload),\n        };\n      default:\n        return state;\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}