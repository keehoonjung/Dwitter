{"ast":null,"code":"var _jsxFileName = \"/Users/keehoonjung/projects/react/dwitter/client/src/container/user_tweets_container.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport Tweets from \"../components/tweets/tweets\";\nimport { getTweets } from \"../module/tweets\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserTweetsContainer = ({\n  username\n}) => {\n  _s();\n\n  console.log(username);\n  const {\n    loading,\n    data,\n    error\n  } = useSelector(state => state.tweets.posts);\n  const {\n    token\n  } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    dispatch(getTweets(username));\n  }, [dispatch, username]);\n  useEffect(() => {\n    if (!token) {\n      history.push(\"/\");\n    }\n  }, [token, history]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uB85C\\uB529\\uC911\\uC785\\uB2C8\\uB2E4.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 21\n  }, this);\n  if (!data) return null;\n  return /*#__PURE__*/_jsxDEV(Tweets, {\n    tweets: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n};\n\n_s(UserTweetsContainer, \"Wkwcs2d6dqxovXjQ1zC5BHAWA58=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useHistory];\n});\n\n_c = UserTweetsContainer;\nexport default UserTweetsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserTweetsContainer\");","map":{"version":3,"sources":["/Users/keehoonjung/projects/react/dwitter/client/src/container/user_tweets_container.jsx"],"names":["React","useEffect","useDispatch","useSelector","useHistory","Tweets","getTweets","UserTweetsContainer","username","console","log","loading","data","error","state","tweets","posts","token","user","dispatch","history","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,QAAM;AAAEG,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA;AAAjB,MAA2BV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaC,KAAzB,CAA5C;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYd,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACI,IAAlB,CAA7B;AACA,QAAMC,QAAQ,GAAGjB,WAAW,EAA5B;AACA,QAAMkB,OAAO,GAAGhB,UAAU,EAA1B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,QAAQ,CAACb,SAAS,CAACE,QAAD,CAAV,CAAR;AACD,GAFQ,EAEN,CAACW,QAAD,EAAWX,QAAX,CAFM,CAAT;AAIAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACgB,KAAL,EAAY;AACVG,MAAAA,OAAO,CAACC,IAAR,CAAa,GAAb;AACD;AACF,GAJQ,EAIN,CAACJ,KAAD,EAAQG,OAAR,CAJM,CAAT;AAMA,MAAIT,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIE,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,MAAI,CAACD,IAAL,EAAW,OAAO,IAAP;AACX,sBAAO,QAAC,MAAD;AAAQ,IAAA,MAAM,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CArBD;;GAAML,mB;UAE6BJ,W,EACfA,W,EACDD,W,EACDE,U;;;KALZG,mB;AAuBN,eAAeA,mBAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport Tweets from \"../components/tweets/tweets\";\nimport { getTweets } from \"../module/tweets\";\n\nconst UserTweetsContainer = ({ username }) => {\n  console.log(username);\n  const { loading, data, error } = useSelector((state) => state.tweets.posts);\n  const { token } = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(getTweets(username));\n  }, [dispatch, username]);\n\n  useEffect(() => {\n    if (!token) {\n      history.push(\"/\");\n    }\n  }, [token, history]);\n\n  if (loading) return <div>로딩중입니다.</div>;\n  if (error) return <div>에러가 발생했습니다</div>;\n  if (!data) return null;\n  return <Tweets tweets={data} />;\n};\n\nexport default UserTweetsContainer;\n"]},"metadata":{},"sourceType":"module"}