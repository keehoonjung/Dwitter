{"ast":null,"code":"export default class UserService {\n  constructor(http, tokenStorage) {\n    this.signUp = async ({\n      username,\n      password,\n      name,\n      email,\n      url\n    }) => {\n      const data = await this.http.fetch(`/auth/signup`, {\n        method: \"POST\",\n        body: JSON.stringify({\n          username,\n          password,\n          name,\n          email,\n          url\n        })\n      });\n      this.tokenStorage.saveToken(data.token);\n      return data;\n    };\n\n    this.login = async ({\n      username,\n      password\n    }) => {\n      const data = await this.http.fetch(`/auth/login`, {\n        method: \"POST\",\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      this.tokenStorage.saveToken(data.token);\n      return data;\n    };\n\n    this.me = async () => {\n      const token = this.tokenStorage.getToken();\n      return await this.http.fetch(\"/auth/me\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n    };\n\n    this.http = http;\n    this.tokenStorage = tokenStorage;\n  }\n\n  async logout() {\n    this.tokenStorage.clearToken();\n  }\n\n}","map":{"version":3,"sources":["/Users/keehoonjung/projects/react/dwitter/client/src/api/user.js"],"names":["UserService","constructor","http","tokenStorage","signUp","username","password","name","email","url","data","fetch","method","body","JSON","stringify","saveToken","token","login","me","getToken","headers","Authorization","logout","clearToken"],"mappings":"AAAA,eAAe,MAAMA,WAAN,CAAkB;AAC/BC,EAAAA,WAAW,CAACC,IAAD,EAAOC,YAAP,EAAqB;AAAA,SAIhCC,MAJgC,GAIvB,OAAO;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,QAAZ;AAAsBC,MAAAA,IAAtB;AAA4BC,MAAAA,KAA5B;AAAmCC,MAAAA;AAAnC,KAAP,KAAoD;AAC3D,YAAMC,IAAI,GAAG,MAAM,KAAKR,IAAL,CAAUS,KAAV,CAAiB,cAAjB,EAAgC;AACjDC,QAAAA,MAAM,EAAE,MADyC;AAEjDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBV,UAAAA,QADmB;AAEnBC,UAAAA,QAFmB;AAGnBC,UAAAA,IAHmB;AAInBC,UAAAA,KAJmB;AAKnBC,UAAAA;AALmB,SAAf;AAF2C,OAAhC,CAAnB;AAUA,WAAKN,YAAL,CAAkBa,SAAlB,CAA4BN,IAAI,CAACO,KAAjC;AACA,aAAOP,IAAP;AACD,KAjB+B;;AAAA,SAmBhCQ,KAnBgC,GAmBxB,OAAO;AAAEb,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAP,KAAkC;AACxC,YAAMI,IAAI,GAAG,MAAM,KAAKR,IAAL,CAAUS,KAAV,CAAiB,aAAjB,EAA+B;AAChDC,QAAAA,MAAM,EAAE,MADwC;AAEhDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBV,UAAAA,QADmB;AAEnBC,UAAAA;AAFmB,SAAf;AAF0C,OAA/B,CAAnB;AAOA,WAAKH,YAAL,CAAkBa,SAAlB,CAA4BN,IAAI,CAACO,KAAjC;AACA,aAAOP,IAAP;AACD,KA7B+B;;AAAA,SA+BhCS,EA/BgC,GA+B3B,YAAY;AACf,YAAMF,KAAK,GAAG,KAAKd,YAAL,CAAkBiB,QAAlB,EAAd;AACA,aAAO,MAAM,KAAKlB,IAAL,CAAUS,KAAV,CAAgB,UAAhB,EAA4B;AACvCC,QAAAA,MAAM,EAAE,KAD+B;AAEvCS,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAG,UAASL,KAAM;AAAjC;AAF8B,OAA5B,CAAb;AAID,KArC+B;;AAC9B,SAAKf,IAAL,GAAYA,IAAZ;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACD;;AAoCW,QAANoB,MAAM,GAAG;AACb,SAAKpB,YAAL,CAAkBqB,UAAlB;AACD;;AA1C8B","sourcesContent":["export default class UserService {\n  constructor(http, tokenStorage) {\n    this.http = http;\n    this.tokenStorage = tokenStorage;\n  }\n  signUp = async ({ username, password, name, email, url }) => {\n    const data = await this.http.fetch(`/auth/signup`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        username,\n        password,\n        name,\n        email,\n        url,\n      }),\n    });\n    this.tokenStorage.saveToken(data.token);\n    return data;\n  };\n\n  login = async ({ username, password }) => {\n    const data = await this.http.fetch(`/auth/login`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        username,\n        password,\n      }),\n    });\n    this.tokenStorage.saveToken(data.token);\n    return data;\n  };\n\n  me = async () => {\n    const token = this.tokenStorage.getToken();\n    return await this.http.fetch(\"/auth/me\", {\n      method: \"GET\",\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  };\n\n  async logout() {\n    this.tokenStorage.clearToken();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}