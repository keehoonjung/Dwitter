{"ast":null,"code":"export const createLoginPromiseThunk = (type, promiseCreator) => {\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n  return param => async dispatch => {\n    dispatch({\n      type\n    });\n\n    try {\n      const payload = await promiseCreator(param);\n      dispatch({\n        type: SUCCESS,\n        payload\n      });\n    } catch (e) {\n      dispatch({\n        type: ERROR,\n        payload: e.toString()\n      });\n    }\n  };\n};\nexport const CreateIdPromiseThunk = (type, promiseCreator) => {\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n  return param => async dispatch => {\n    dispatch({\n      type\n    });\n\n    try {\n      const payload = await promiseCreator(param);\n      dispatch({\n        type: SUCCESS,\n        payload\n      });\n    } catch (e) {\n      dispatch({\n        type: ERROR,\n        payload: `Error: ${param.username} already exists`\n      });\n    }\n  };\n};\n_c = CreateIdPromiseThunk;\nexport const userReducerUtils = {\n  initial: (initialData = null) => ({\n    loading: false,\n    login: false,\n    data: null,\n    error: null\n  }),\n  loading: () => ({\n    loading: true,\n    login: false,\n    data: null,\n    error: null\n  }),\n  login_success: payload => ({\n    loading: false,\n    login: true,\n    data: payload,\n    error: null\n  }),\n  logout_success: () => ({\n    loading: false,\n    login: false,\n    data: null,\n    error: null\n  }),\n  error: error => ({\n    loading: false,\n    login: false,\n    data: null,\n    error: error\n  })\n};\nexport const userHandleAsyncActions = (type, key) => {\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n  return (state, action) => {\n    switch (action.type) {\n      case type:\n        return {\n          user: userReducerUtils.loading()\n        };\n\n      case SUCCESS:\n        if (key === \"login\") {\n          return {\n            user: userReducerUtils.login_success(action.payload)\n          };\n        } else {\n          return {\n            user: userReducerUtils.logout_success()\n          };\n        }\n\n      case ERROR:\n        return {\n          user: userReducerUtils.error(action.payload)\n        };\n\n      default:\n        return state;\n    }\n  };\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateIdPromiseThunk\");","map":{"version":3,"sources":["/Users/keehoonjung/projects/react/dwitter/client/src/util/user_async_utils.js"],"names":["createLoginPromiseThunk","type","promiseCreator","SUCCESS","ERROR","param","dispatch","payload","e","toString","CreateIdPromiseThunk","username","userReducerUtils","initial","initialData","loading","login","data","error","login_success","logout_success","userHandleAsyncActions","key","state","action","user"],"mappings":"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","sourcesContent":["export const createLoginPromiseThunk = (type, promiseCreator) => {\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n\n  return (param) => async (dispatch) => {\n    dispatch({ type });\n    try {\n      const payload = await promiseCreator(param);\n      dispatch({ type: SUCCESS, payload });\n    } catch (e) {\n      dispatch({ type: ERROR, payload: e.toString() });\n    }\n  };\n};\n\nexport const CreateIdPromiseThunk = (type, promiseCreator) => {\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n  return (param) => async (dispatch) => {\n    dispatch({ type });\n    try {\n      const payload = await promiseCreator(param);\n      dispatch({ type: SUCCESS, payload });\n    } catch (e) {\n      dispatch({\n        type: ERROR,\n        payload: `Error: ${param.username} already exists`,\n      });\n    }\n  };\n};\n\nexport const userReducerUtils = {\n  initial: (initialData = null) => ({\n    loading: false,\n    login: false,\n    data: null,\n    error: null,\n  }),\n  loading: () => ({\n    loading: true,\n    login: false,\n    data: null,\n    error: null,\n  }),\n  login_success: (payload) => ({\n    loading: false,\n    login: true,\n    data: payload,\n    error: null,\n  }),\n  logout_success: () => ({\n    loading: false,\n    login: false,\n    data: null,\n    error: null,\n  }),\n  error: (error) => ({\n    loading: false,\n    login: false,\n    data: null,\n    error: error,\n  }),\n};\n\nexport const userHandleAsyncActions = (type, key) => {\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n  return (state, action) => {\n    switch (action.type) {\n      case type:\n        return {\n          user: userReducerUtils.loading(),\n        };\n      case SUCCESS:\n        if (key === \"login\") {\n          return {\n            user: userReducerUtils.login_success(action.payload),\n          };\n        } else {\n          return {\n            user: userReducerUtils.logout_success(),\n          };\n        }\n      case ERROR:\n        return {\n          user: userReducerUtils.error(action.payload),\n        };\n      default:\n        return state;\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}